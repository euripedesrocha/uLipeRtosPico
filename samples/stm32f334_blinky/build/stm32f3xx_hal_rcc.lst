ARM GAS  /tmp/cc0KFdmJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RCC_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_RCC_DeInit:
  26              	.LFB124:
  27              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @file    stm32f3xx_hal_rcc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *       
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, I2S, TIM, USB FS)
ARM GAS  /tmp/cc0KFdmJ.s 			page 2


  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      without specific prior written permission.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************  
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** */
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #include "stm32f3xx_hal.h"
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @addtogroup STM32F3xx_HAL_Driver
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** * @brief RCC HAL module driver
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
ARM GAS  /tmp/cc0KFdmJ.s 			page 3


  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  * @{
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  */
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                        10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                          9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim    
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
ARM GAS  /tmp/cc0KFdmJ.s 			page 4


 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and APB2).
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the PLL as System clock source.
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz)
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB FS (48 MHz)
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The third output may be used to generate the clock for the ADC peripherals (up to 72 M
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The fourth output may be used to generate the clock for the TIM peripherals (144 MHz)
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M4 NMI 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           HSE and PLL.
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) For the STM32F3xx devices, the maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              prefetch is disabled.
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
ARM GAS  /tmp/cc0KFdmJ.s 			page 5


 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /*
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSE and PLL OFF
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - All interrupts disabled
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - Peripheral clocks
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  28              		.loc 1 233 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  33              		.loc 1 235 0
  34 0000 0D4B     		ldr	r3, .L2
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 42F08102 		orr	r2, r2, #129
  37 0008 1A60     		str	r2, [r3]
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0] and MCOSEL[2:0] bits */
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2 | RCC_CFGR_MCO
  38              		.loc 1 238 0
  39 000a 5968     		ldr	r1, [r3, #4]
  40 000c 0B4A     		ldr	r2, .L2+4
  41 000e 0A40     		ands	r2, r2, r1
  42 0010 5A60     		str	r2, [r3, #4]
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
  43              		.loc 1 241 0
  44 0012 1A68     		ldr	r2, [r3]
  45 0014 22F08472 		bic	r2, r2, #17301504
ARM GAS  /tmp/cc0KFdmJ.s 			page 6


  46 0018 22F48032 		bic	r2, r2, #65536
  47 001c 1A60     		str	r2, [r3]
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  48              		.loc 1 244 0
  49 001e 1A68     		ldr	r2, [r3]
  50 0020 22F48022 		bic	r2, r2, #262144
  51 0024 1A60     		str	r2, [r3]
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR register */
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  52              		.loc 1 247 0
  53 0026 0022     		movs	r2, #0
  54 0028 5A60     		str	r2, [r3, #4]
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR2 register */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
  55              		.loc 1 250 0
  56 002a DA62     		str	r2, [r3, #44]
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR3 register */
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
  57              		.loc 1 253 0
  58 002c 1A63     		str	r2, [r3, #48]
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Disable all interrupts */
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  59              		.loc 1 256 0
  60 002e 9A60     		str	r2, [r3, #8]
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  61              		.loc 1 259 0
  62 0030 034A     		ldr	r2, .L2+8
  63 0032 044B     		ldr	r3, .L2+12
  64 0034 1A60     		str	r2, [r3]
  65 0036 7047     		bx	lr
  66              	.L3:
  67              		.align	2
  68              	.L2:
  69 0038 00100240 		.word	1073876992
  70 003c 0CC0FFF8 		.word	-117456884
  71 0040 00127A00 		.word	8000000
  72 0044 00000000 		.word	SystemCoreClock
  73              		.cfi_endproc
  74              	.LFE124:
  76              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  77              		.align	1
  78              		.global	HAL_RCC_OscConfig
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu fpv4-sp-d16
  84              	HAL_RCC_OscConfig:
  85              	.LFB125:
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
ARM GAS  /tmp/cc0KFdmJ.s 			page 7


 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  86              		.loc 1 277 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL0:
  91 0000 70B5     		push	{r4, r5, r6, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 16
  94              		.cfi_offset 4, -16
  95              		.cfi_offset 5, -12
  96              		.cfi_offset 6, -8
  97              		.cfi_offset 14, -4
  98 0002 82B0     		sub	sp, sp, #8
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 24
 101 0004 0446     		mov	r4, r0
 102              	.LVL1:
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 103              		.loc 1 285 0
 104 0006 0368     		ldr	r3, [r0]
 105 0008 13F0010F 		tst	r3, #1
 106 000c 63D0     		beq	.L5
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 107              		.loc 1 291 0
 108 000e B54B     		ldr	r3, .L111
 109 0010 5B68     		ldr	r3, [r3, #4]
 110 0012 03F00C03 		and	r3, r3, #12
 111 0016 042B     		cmp	r3, #4
ARM GAS  /tmp/cc0KFdmJ.s 			page 8


 112 0018 46D0     		beq	.L6
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 113              		.loc 1 292 0
 114 001a B24B     		ldr	r3, .L111
 115 001c 5B68     		ldr	r3, [r3, #4]
 116 001e 03F00C03 		and	r3, r3, #12
 117 0022 082B     		cmp	r3, #8
 118 0024 3BD0     		beq	.L95
 119              	.L7:
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 120              		.loc 1 302 0
 121 0026 6368     		ldr	r3, [r4, #4]
 122 0028 B3F5803F 		cmp	r3, #65536
 123 002c 00F08E80 		beq	.L96
 124              		.loc 1 302 0 is_stmt 0 discriminator 2
 125 0030 002B     		cmp	r3, #0
 126 0032 40F09180 		bne	.L13
 127              		.loc 1 302 0 discriminator 3
 128 0036 03F18043 		add	r3, r3, #1073741824
 129 003a 03F50433 		add	r3, r3, #135168
 130 003e 1A68     		ldr	r2, [r3]
 131 0040 22F48032 		bic	r2, r2, #65536
 132 0044 1A60     		str	r2, [r3]
 133 0046 1A68     		ldr	r2, [r3]
 134 0048 22F48022 		bic	r2, r2, #262144
 135 004c 1A60     		str	r2, [r3]
 136              	.L12:
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the HSE predivision factor --------------------------------*/
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 137              		.loc 1 306 0 is_stmt 1
 138 004e A54A     		ldr	r2, .L111
 139 0050 D36A     		ldr	r3, [r2, #44]
 140 0052 23F00F03 		bic	r3, r3, #15
 141 0056 A168     		ldr	r1, [r4, #8]
 142 0058 0B43     		orrs	r3, r3, r1
 143 005a D362     		str	r3, [r2, #44]
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Check the HSE State */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 144              		.loc 1 310 0
 145 005c 6368     		ldr	r3, [r4, #4]
 146 005e 002B     		cmp	r3, #0
 147 0060 00F09480 		beq	.L15
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
ARM GAS  /tmp/cc0KFdmJ.s 			page 9


 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 148              		.loc 1 313 0
 149 0064 FFF7FEFF 		bl	HAL_GetTick
 150              	.LVL2:
 151 0068 0546     		mov	r5, r0
 152              	.LVL3:
 153              	.L16:
 154              	.LBB166:
 155              	.LBB167:
 156              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
ARM GAS  /tmp/cc0KFdmJ.s 			page 10


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc0KFdmJ.s 			page 11


 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc0KFdmJ.s 			page 12


 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc0KFdmJ.s 			page 13


 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc0KFdmJ.s 			page 14


 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
ARM GAS  /tmp/cc0KFdmJ.s 			page 15


 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc0KFdmJ.s 			page 16


 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
ARM GAS  /tmp/cc0KFdmJ.s 			page 17


 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc0KFdmJ.s 			page 18


 504:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 157              		.loc 2 531 0
 158 006a 4FF40033 		mov	r3, #131072
 159              		.syntax unified
 160              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 161 006e 93FAA3F3 		rbit r3, r3
 162              	@ 0 "" 2
 163              	.LVL4:
 164              		.thumb
 165              		.syntax unified
 166              	.LBE167:
 167              	.LBE166:
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is ready */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 168              		.loc 1 316 0
 169 0072 9C4B     		ldr	r3, .L111
 170 0074 1968     		ldr	r1, [r3]
 171              	.LVL5:
 172              	.LBB168:
 173              	.LBB169:
 174              		.loc 2 531 0
 175 0076 4FF40033 		mov	r3, #131072
 176              		.syntax unified
 177              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 178 007a 93FAA3F3 		rbit r3, r3
 179              	@ 0 "" 2
 180              	.LVL6:
 181              		.thumb
 182              		.syntax unified
ARM GAS  /tmp/cc0KFdmJ.s 			page 19


 183              	.LBE169:
 184              	.LBE168:
 185              		.loc 1 316 0
 186 007e B3FA83F3 		clz	r3, r3
 187 0082 03F01F03 		and	r3, r3, #31
 188 0086 0122     		movs	r2, #1
 189 0088 02FA03F3 		lsl	r3, r2, r3
 190 008c 1942     		tst	r1, r3
 191 008e 22D1     		bne	.L5
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 192              		.loc 1 318 0
 193 0090 FFF7FEFF 		bl	HAL_GetTick
 194              	.LVL7:
 195 0094 401B     		subs	r0, r0, r5
 196 0096 6428     		cmp	r0, #100
 197 0098 E7D9     		bls	.L16
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 198              		.loc 1 320 0
 199 009a 0320     		movs	r0, #3
 200 009c ABE2     		b	.L10
 201              	.LVL8:
 202              	.L95:
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 203              		.loc 1 292 0 discriminator 1
 204 009e 914B     		ldr	r3, .L111
 205 00a0 5B68     		ldr	r3, [r3, #4]
 206 00a2 13F4803F 		tst	r3, #65536
 207 00a6 BED0     		beq	.L7
 208              	.L6:
 209              	.LVL9:
 210              	.LBB170:
 211              	.LBB171:
 212              		.loc 2 531 0
 213 00a8 4FF40033 		mov	r3, #131072
 214              		.syntax unified
 215              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 216 00ac 93FAA3F3 		rbit r3, r3
 217              	@ 0 "" 2
 218              	.LVL10:
 219              		.thumb
 220              		.syntax unified
 221              	.LBE171:
 222              	.LBE170:
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 223              		.loc 1 294 0
 224 00b0 8C4B     		ldr	r3, .L111
 225 00b2 1968     		ldr	r1, [r3]
 226              	.LVL11:
 227              	.LBB172:
 228              	.LBB173:
 229              		.loc 2 531 0
 230 00b4 4FF40033 		mov	r3, #131072
 231              		.syntax unified
 232              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 233 00b8 93FAA3F3 		rbit r3, r3
ARM GAS  /tmp/cc0KFdmJ.s 			page 20


 234              	@ 0 "" 2
 235              	.LVL12:
 236              		.thumb
 237              		.syntax unified
 238              	.LBE173:
 239              	.LBE172:
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 240              		.loc 1 294 0
 241 00bc B3FA83F3 		clz	r3, r3
 242 00c0 03F01F03 		and	r3, r3, #31
 243 00c4 0122     		movs	r2, #1
 244 00c6 02FA03F3 		lsl	r3, r2, r3
 245 00ca 1942     		tst	r1, r3
 246 00cc 03D0     		beq	.L5
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 247              		.loc 1 294 0 is_stmt 0 discriminator 13
 248 00ce 6368     		ldr	r3, [r4, #4]
 249 00d0 002B     		cmp	r3, #0
 250 00d2 00F08982 		beq	.L97
 251              	.LVL13:
 252              	.L5:
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 253              		.loc 1 341 0 is_stmt 1
 254 00d6 2368     		ldr	r3, [r4]
 255 00d8 13F0020F 		tst	r3, #2
 256 00dc 00F09C80 		beq	.L24
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 257              		.loc 1 348 0
 258 00e0 804B     		ldr	r3, .L111
 259 00e2 5B68     		ldr	r3, [r3, #4]
 260 00e4 13F00C0F 		tst	r3, #12
ARM GAS  /tmp/cc0KFdmJ.s 			page 21


 261 00e8 72D0     		beq	.L25
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 262              		.loc 1 349 0
 263 00ea 7E4B     		ldr	r3, .L111
 264 00ec 5B68     		ldr	r3, [r3, #4]
 265 00ee 03F00C03 		and	r3, r3, #12
 266 00f2 082B     		cmp	r3, #8
 267 00f4 67D0     		beq	.L98
 268              	.L26:
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI State */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 269              		.loc 1 366 0
 270 00f6 2369     		ldr	r3, [r4, #16]
 271 00f8 002B     		cmp	r3, #0
 272 00fa 00F0CB80 		beq	.L30
 273              	.LVL14:
 274              	.LBB174:
 275              	.LBB175:
 276              		.loc 2 531 0
 277 00fe 0122     		movs	r2, #1
 278              		.syntax unified
 279              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 280 0100 92FAA2F3 		rbit r3, r2
 281              	@ 0 "" 2
 282              	.LVL15:
 283              		.thumb
 284              		.syntax unified
 285              	.LBE175:
 286              	.LBE174:
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 287              		.loc 1 369 0
 288 0104 B3FA83F3 		clz	r3, r3
 289 0108 03F18453 		add	r3, r3, #276824064
 290 010c 03F58413 		add	r3, r3, #1081344
 291 0110 9B00     		lsls	r3, r3, #2
 292 0112 1A60     		str	r2, [r3]
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 293              		.loc 1 372 0
ARM GAS  /tmp/cc0KFdmJ.s 			page 22


 294 0114 FFF7FEFF 		bl	HAL_GetTick
 295              	.LVL16:
 296 0118 0546     		mov	r5, r0
 297              	.LVL17:
 298              	.L31:
 299              	.LBB176:
 300              	.LBB177:
 301              		.loc 2 531 0
 302 011a 0223     		movs	r3, #2
 303              		.syntax unified
 304              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 305 011c 93FAA3F3 		rbit r3, r3
 306              	@ 0 "" 2
 307              	.LVL18:
 308              		.thumb
 309              		.syntax unified
 310              	.LBE177:
 311              	.LBE176:
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is ready */
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 312              		.loc 1 375 0
 313 0120 704B     		ldr	r3, .L111
 314 0122 1968     		ldr	r1, [r3]
 315              	.LVL19:
 316              	.LBB178:
 317              	.LBB179:
 318              		.loc 2 531 0
 319 0124 0223     		movs	r3, #2
 320              		.syntax unified
 321              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 322 0126 93FAA3F3 		rbit r3, r3
 323              	@ 0 "" 2
 324              	.LVL20:
 325              		.thumb
 326              		.syntax unified
 327              	.LBE179:
 328              	.LBE178:
 329              		.loc 1 375 0
 330 012a B3FA83F3 		clz	r3, r3
 331 012e 03F01F03 		and	r3, r3, #31
 332 0132 0122     		movs	r2, #1
 333 0134 02FA03F3 		lsl	r3, r2, r3
 334 0138 1942     		tst	r1, r3
 335 013a 40F09C80 		bne	.L99
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 336              		.loc 1 377 0
 337 013e FFF7FEFF 		bl	HAL_GetTick
 338              	.LVL21:
 339 0142 401B     		subs	r0, r0, r5
 340 0144 0228     		cmp	r0, #2
 341 0146 E8D9     		bls	.L31
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 342              		.loc 1 379 0
 343 0148 0320     		movs	r0, #3
ARM GAS  /tmp/cc0KFdmJ.s 			page 23


 344 014a 54E2     		b	.L10
 345              	.LVL22:
 346              	.L96:
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 347              		.loc 1 302 0 discriminator 1
 348 014c 654A     		ldr	r2, .L111
 349 014e 1368     		ldr	r3, [r2]
 350 0150 43F48033 		orr	r3, r3, #65536
 351 0154 1360     		str	r3, [r2]
 352 0156 7AE7     		b	.L12
 353              	.L13:
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 354              		.loc 1 302 0 is_stmt 0 discriminator 4
 355 0158 B3F5A02F 		cmp	r3, #327680
 356 015c 09D0     		beq	.L100
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 357              		.loc 1 302 0 discriminator 6
 358 015e 614B     		ldr	r3, .L111
 359 0160 1A68     		ldr	r2, [r3]
 360 0162 22F48032 		bic	r2, r2, #65536
 361 0166 1A60     		str	r2, [r3]
 362 0168 1A68     		ldr	r2, [r3]
 363 016a 22F48022 		bic	r2, r2, #262144
 364 016e 1A60     		str	r2, [r3]
 365 0170 6DE7     		b	.L12
 366              	.L100:
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 367              		.loc 1 302 0 discriminator 5
 368 0172 03F18043 		add	r3, r3, #1073741824
 369 0176 A3F53C33 		sub	r3, r3, #192512
 370 017a 1A68     		ldr	r2, [r3]
 371 017c 42F48022 		orr	r2, r2, #262144
 372 0180 1A60     		str	r2, [r3]
 373 0182 1A68     		ldr	r2, [r3]
 374 0184 42F48032 		orr	r2, r2, #65536
 375 0188 1A60     		str	r2, [r3]
 376 018a 60E7     		b	.L12
 377              	.L15:
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 378              		.loc 1 327 0 is_stmt 1
 379 018c FFF7FEFF 		bl	HAL_GetTick
 380              	.LVL23:
 381 0190 0546     		mov	r5, r0
 382              	.LVL24:
 383              	.L20:
 384              	.LBB180:
 385              	.LBB181:
 386              		.loc 2 531 0
 387 0192 4FF40033 		mov	r3, #131072
 388              		.syntax unified
 389              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 390 0196 93FAA3F3 		rbit r3, r3
 391              	@ 0 "" 2
 392              	.LVL25:
 393              		.thumb
 394              		.syntax unified
 395              	.LBE181:
ARM GAS  /tmp/cc0KFdmJ.s 			page 24


 396              	.LBE180:
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 397              		.loc 1 330 0
 398 019a 524B     		ldr	r3, .L111
 399 019c 1968     		ldr	r1, [r3]
 400              	.LVL26:
 401              	.LBB182:
 402              	.LBB183:
 403              		.loc 2 531 0
 404 019e 4FF40033 		mov	r3, #131072
 405              		.syntax unified
 406              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 407 01a2 93FAA3F3 		rbit r3, r3
 408              	@ 0 "" 2
 409              	.LVL27:
 410              		.thumb
 411              		.syntax unified
 412              	.LBE183:
 413              	.LBE182:
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 414              		.loc 1 330 0
 415 01a6 B3FA83F3 		clz	r3, r3
 416 01aa 03F01F03 		and	r3, r3, #31
 417 01ae 0122     		movs	r2, #1
 418 01b0 02FA03F3 		lsl	r3, r2, r3
 419 01b4 1942     		tst	r1, r3
 420 01b6 8ED0     		beq	.L5
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 421              		.loc 1 332 0
 422 01b8 FFF7FEFF 		bl	HAL_GetTick
 423              	.LVL28:
 424 01bc 401B     		subs	r0, r0, r5
 425 01be 6428     		cmp	r0, #100
 426 01c0 E7D9     		bls	.L20
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 427              		.loc 1 334 0
 428 01c2 0320     		movs	r0, #3
 429 01c4 17E2     		b	.L10
 430              	.LVL29:
 431              	.L98:
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 432              		.loc 1 349 0 discriminator 1
 433 01c6 474B     		ldr	r3, .L111
 434 01c8 5B68     		ldr	r3, [r3, #4]
 435 01ca 13F4803F 		tst	r3, #65536
 436 01ce 92D1     		bne	.L26
 437              	.L25:
 438              	.LVL30:
 439              	.LBB184:
 440              	.LBB185:
 441              		.loc 2 531 0
 442 01d0 0223     		movs	r3, #2
 443              		.syntax unified
 444              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 445 01d2 93FAA3F3 		rbit r3, r3
 446              	@ 0 "" 2
 447              	.LVL31:
ARM GAS  /tmp/cc0KFdmJ.s 			page 25


 448              		.thumb
 449              		.syntax unified
 450              	.LBE185:
 451              	.LBE184:
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 452              		.loc 1 352 0
 453 01d6 434B     		ldr	r3, .L111
 454 01d8 1968     		ldr	r1, [r3]
 455              	.LVL32:
 456              	.LBB186:
 457              	.LBB187:
 458              		.loc 2 531 0
 459 01da 0223     		movs	r3, #2
 460              		.syntax unified
 461              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 462 01dc 93FAA3F3 		rbit r3, r3
 463              	@ 0 "" 2
 464              	.LVL33:
 465              		.thumb
 466              		.syntax unified
 467              	.LBE187:
 468              	.LBE186:
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 469              		.loc 1 352 0
 470 01e0 B3FA83F3 		clz	r3, r3
 471 01e4 03F01F03 		and	r3, r3, #31
 472 01e8 0122     		movs	r2, #1
 473 01ea 02FA03F3 		lsl	r3, r2, r3
 474 01ee 1942     		tst	r1, r3
 475 01f0 04D0     		beq	.L29
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 476              		.loc 1 352 0 is_stmt 0 discriminator 13
 477 01f2 2369     		ldr	r3, [r4, #16]
 478 01f4 9342     		cmp	r3, r2
 479 01f6 01D0     		beq	.L29
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 480              		.loc 1 354 0 is_stmt 1
 481 01f8 0120     		movs	r0, #1
 482 01fa FCE1     		b	.L10
 483              	.L29:
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 484              		.loc 1 360 0
 485 01fc 3948     		ldr	r0, .L111
 486 01fe 0368     		ldr	r3, [r0]
 487 0200 23F0F803 		bic	r3, r3, #248
 488 0204 6169     		ldr	r1, [r4, #20]
 489              	.LVL34:
 490              	.LBB188:
 491              	.LBB189:
 492              		.loc 2 531 0
 493 0206 F822     		movs	r2, #248
 494              		.syntax unified
 495              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 496 0208 92FAA2F2 		rbit r2, r2
 497              	@ 0 "" 2
 498              	.LVL35:
 499              		.thumb
ARM GAS  /tmp/cc0KFdmJ.s 			page 26


 500              		.syntax unified
 501              	.LBE189:
 502              	.LBE188:
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 503              		.loc 1 360 0
 504 020c B2FA82F2 		clz	r2, r2
 505 0210 01FA02F2 		lsl	r2, r1, r2
 506 0214 1343     		orrs	r3, r3, r2
 507 0216 0360     		str	r3, [r0]
 508              	.L24:
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                 
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 509              		.loc 1 406 0
 510 0218 2368     		ldr	r3, [r4]
 511 021a 13F0080F 		tst	r3, #8
 512 021e 00F08D80 		beq	.L39
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSI State */
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 513              		.loc 1 412 0
 514 0222 A369     		ldr	r3, [r4, #24]
 515 0224 002B     		cmp	r3, #0
 516 0226 61D0     		beq	.L40
 517              	.LVL36:
 518              	.LBB190:
 519              	.LBB191:
 520              		.loc 2 531 0
 521 0228 0121     		movs	r1, #1
 522              		.syntax unified
ARM GAS  /tmp/cc0KFdmJ.s 			page 27


 523              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 524 022a 91FAA1F2 		rbit r2, r1
 525              	@ 0 "" 2
 526              	.LVL37:
 527              		.thumb
 528              		.syntax unified
 529              	.LBE191:
 530              	.LBE190:
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 531              		.loc 1 415 0
 532 022e B2FA82F2 		clz	r2, r2
 533 0232 2D4B     		ldr	r3, .L111+4
 534 0234 1344     		add	r3, r3, r2
 535 0236 9B00     		lsls	r3, r3, #2
 536 0238 1960     		str	r1, [r3]
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 537              		.loc 1 418 0
 538 023a FFF7FEFF 		bl	HAL_GetTick
 539              	.LVL38:
 540 023e 0546     		mov	r5, r0
 541              	.LVL39:
 542              	.L41:
 543              	.LBB192:
 544              	.LBB193:
 545              		.loc 2 531 0
 546 0240 0223     		movs	r3, #2
 547              		.syntax unified
 548              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 549 0242 93FAA3F2 		rbit r2, r3
 550              	@ 0 "" 2
 551              	.LVL40:
 552              		.thumb
 553              		.syntax unified
 554              	.LBE193:
 555              	.LBE192:
 556              	.LBB194:
 557              	.LBB195:
 558              		.syntax unified
 559              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 560 0246 93FAA3F2 		rbit r2, r3
 561              	@ 0 "" 2
 562              	.LVL41:
 563              		.thumb
 564              		.syntax unified
 565              	.LBE195:
 566              	.LBE194:
 567              	.LBB196:
 568              	.LBB197:
 569              		.syntax unified
 570              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 571 024a 93FAA3F2 		rbit r2, r3
 572              	@ 0 "" 2
 573              	.LVL42:
ARM GAS  /tmp/cc0KFdmJ.s 			page 28


 574              		.thumb
 575              		.syntax unified
 576              	.LBE197:
 577              	.LBE196:
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 578              		.loc 1 421 0
 579 024e 254A     		ldr	r2, .L111
 580 0250 516A     		ldr	r1, [r2, #36]
 581              	.LVL43:
 582              	.LBB198:
 583              	.LBB199:
 584              		.loc 2 531 0
 585              		.syntax unified
 586              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 587 0252 93FAA3F3 		rbit r3, r3
 588              	@ 0 "" 2
 589              	.LVL44:
 590              		.thumb
 591              		.syntax unified
 592              	.LBE199:
 593              	.LBE198:
 594              		.loc 1 421 0
 595 0256 B3FA83F3 		clz	r3, r3
 596 025a 03F01F03 		and	r3, r3, #31
 597 025e 0122     		movs	r2, #1
 598 0260 02FA03F3 		lsl	r3, r2, r3
 599 0264 1942     		tst	r1, r3
 600 0266 69D1     		bne	.L39
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 601              		.loc 1 423 0
 602 0268 FFF7FEFF 		bl	HAL_GetTick
 603              	.LVL45:
 604 026c 401B     		subs	r0, r0, r5
 605 026e 0228     		cmp	r0, #2
 606 0270 E6D9     		bls	.L41
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 607              		.loc 1 425 0
 608 0272 0320     		movs	r0, #3
 609 0274 BFE1     		b	.L10
 610              	.L99:
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 611              		.loc 1 384 0
 612 0276 1B48     		ldr	r0, .L111
 613 0278 0368     		ldr	r3, [r0]
 614 027a 23F0F803 		bic	r3, r3, #248
 615 027e 6169     		ldr	r1, [r4, #20]
 616              	.LVL46:
 617              	.LBB200:
 618              	.LBB201:
 619              		.loc 2 531 0
 620 0280 F822     		movs	r2, #248
 621              		.syntax unified
 622              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/cc0KFdmJ.s 			page 29


 623 0282 92FAA2F2 		rbit r2, r2
 624              	@ 0 "" 2
 625              	.LVL47:
 626              		.thumb
 627              		.syntax unified
 628              	.LBE201:
 629              	.LBE200:
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 630              		.loc 1 384 0
 631 0286 B2FA82F2 		clz	r2, r2
 632 028a 01FA02F2 		lsl	r2, r1, r2
 633 028e 1343     		orrs	r3, r3, r2
 634 0290 0360     		str	r3, [r0]
 635 0292 C1E7     		b	.L24
 636              	.LVL48:
 637              	.L30:
 638              	.LBB202:
 639              	.LBB203:
 640              		.loc 2 531 0
 641 0294 0123     		movs	r3, #1
 642              		.syntax unified
 643              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 644 0296 93FAA3F3 		rbit r3, r3
 645              	@ 0 "" 2
 646              	.LVL49:
 647              		.thumb
 648              		.syntax unified
 649              	.LBE203:
 650              	.LBE202:
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 651              		.loc 1 389 0
 652 029a B3FA83F3 		clz	r3, r3
 653 029e 03F18453 		add	r3, r3, #276824064
 654 02a2 03F58413 		add	r3, r3, #1081344
 655 02a6 9B00     		lsls	r3, r3, #2
 656 02a8 0022     		movs	r2, #0
 657 02aa 1A60     		str	r2, [r3]
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 658              		.loc 1 392 0
 659 02ac FFF7FEFF 		bl	HAL_GetTick
 660              	.LVL50:
 661 02b0 0546     		mov	r5, r0
 662              	.LVL51:
 663              	.L35:
 664              	.LBB204:
 665              	.LBB205:
 666              		.loc 2 531 0
 667 02b2 0223     		movs	r3, #2
 668              		.syntax unified
 669              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 670 02b4 93FAA3F3 		rbit r3, r3
 671              	@ 0 "" 2
 672              	.LVL52:
 673              		.thumb
 674              		.syntax unified
 675              	.LBE205:
 676              	.LBE204:
ARM GAS  /tmp/cc0KFdmJ.s 			page 30


 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 677              		.loc 1 395 0
 678 02b8 0A4B     		ldr	r3, .L111
 679 02ba 1968     		ldr	r1, [r3]
 680              	.LVL53:
 681              	.LBB206:
 682              	.LBB207:
 683              		.loc 2 531 0
 684 02bc 0223     		movs	r3, #2
 685              		.syntax unified
 686              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 687 02be 93FAA3F3 		rbit r3, r3
 688              	@ 0 "" 2
 689              	.LVL54:
 690              		.thumb
 691              		.syntax unified
 692              	.LBE207:
 693              	.LBE206:
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 694              		.loc 1 395 0
 695 02c2 B3FA83F3 		clz	r3, r3
 696 02c6 03F01F03 		and	r3, r3, #31
 697 02ca 0122     		movs	r2, #1
 698 02cc 02FA03F3 		lsl	r3, r2, r3
 699 02d0 1942     		tst	r1, r3
 700 02d2 A1D0     		beq	.L24
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 701              		.loc 1 397 0
 702 02d4 FFF7FEFF 		bl	HAL_GetTick
 703              	.LVL55:
 704 02d8 401B     		subs	r0, r0, r5
 705 02da 0228     		cmp	r0, #2
 706 02dc E9D9     		bls	.L35
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 707              		.loc 1 399 0
 708 02de 0320     		movs	r0, #3
 709 02e0 89E1     		b	.L10
 710              	.L112:
 711 02e2 00BF     		.align	2
 712              	.L111:
 713 02e4 00100240 		.word	1073876992
 714 02e8 20819010 		.word	277905696
 715              	.LVL56:
 716              	.L40:
 717              	.LBB208:
 718              	.LBB209:
 719              		.loc 2 531 0
 720 02ec 0122     		movs	r2, #1
 721              		.syntax unified
 722              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 723 02ee 92FAA2F2 		rbit r2, r2
 724              	@ 0 "" 2
 725              	.LVL57:
 726              		.thumb
 727              		.syntax unified
 728              	.LBE209:
 729              	.LBE208:
ARM GAS  /tmp/cc0KFdmJ.s 			page 31


 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 730              		.loc 1 432 0
 731 02f2 B2FA82F2 		clz	r2, r2
 732 02f6 C14B     		ldr	r3, .L113
 733 02f8 1344     		add	r3, r3, r2
 734 02fa 9B00     		lsls	r3, r3, #2
 735 02fc 0022     		movs	r2, #0
 736 02fe 1A60     		str	r2, [r3]
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 737              		.loc 1 435 0
 738 0300 FFF7FEFF 		bl	HAL_GetTick
 739              	.LVL58:
 740 0304 0546     		mov	r5, r0
 741              	.LVL59:
 742              	.L43:
 743              	.LBB210:
 744              	.LBB211:
 745              		.loc 2 531 0
 746 0306 0223     		movs	r3, #2
 747              		.syntax unified
 748              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 749 0308 93FAA3F2 		rbit r2, r3
 750              	@ 0 "" 2
 751              	.LVL60:
 752              		.thumb
 753              		.syntax unified
 754              	.LBE211:
 755              	.LBE210:
 756              	.LBB212:
 757              	.LBB213:
 758              		.syntax unified
 759              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 760 030c 93FAA3F2 		rbit r2, r3
 761              	@ 0 "" 2
 762              	.LVL61:
 763              		.thumb
 764              		.syntax unified
 765              	.LBE213:
 766              	.LBE212:
 767              	.LBB214:
 768              	.LBB215:
 769              		.syntax unified
 770              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 771 0310 93FAA3F2 		rbit r2, r3
 772              	@ 0 "" 2
 773              	.LVL62:
 774              		.thumb
 775              		.syntax unified
 776              	.LBE215:
ARM GAS  /tmp/cc0KFdmJ.s 			page 32


 777              	.LBE214:
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 778              		.loc 1 438 0
 779 0314 BA4A     		ldr	r2, .L113+4
 780 0316 516A     		ldr	r1, [r2, #36]
 781              	.LVL63:
 782              	.LBB216:
 783              	.LBB217:
 784              		.loc 2 531 0
 785              		.syntax unified
 786              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 787 0318 93FAA3F3 		rbit r3, r3
 788              	@ 0 "" 2
 789              	.LVL64:
 790              		.thumb
 791              		.syntax unified
 792              	.LBE217:
 793              	.LBE216:
 794              		.loc 1 438 0
 795 031c B3FA83F3 		clz	r3, r3
 796 0320 03F01F03 		and	r3, r3, #31
 797 0324 0122     		movs	r2, #1
 798 0326 02FA03F3 		lsl	r3, r2, r3
 799 032a 1942     		tst	r1, r3
 800 032c 06D0     		beq	.L39
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 801              		.loc 1 440 0
 802 032e FFF7FEFF 		bl	HAL_GetTick
 803              	.LVL65:
 804 0332 401B     		subs	r0, r0, r5
 805 0334 0228     		cmp	r0, #2
 806 0336 E6D9     		bls	.L43
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 807              		.loc 1 442 0
 808 0338 0320     		movs	r0, #3
 809 033a 5CE1     		b	.L10
 810              	.LVL66:
 811              	.L39:
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 812              		.loc 1 448 0
 813 033c 2368     		ldr	r3, [r4]
 814 033e 13F0040F 		tst	r3, #4
 815 0342 00F0B380 		beq	.L45
 816              	.LVL67:
 817              	.LBB218:
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
ARM GAS  /tmp/cc0KFdmJ.s 			page 33


 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 818              		.loc 1 457 0
 819 0346 AE4B     		ldr	r3, .L113+4
 820 0348 DB69     		ldr	r3, [r3, #28]
 821 034a 13F0805F 		tst	r3, #268435456
 822 034e 26D1     		bne	.L85
 823              	.LBB219:
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 824              		.loc 1 459 0
 825 0350 AB4B     		ldr	r3, .L113+4
 826 0352 DA69     		ldr	r2, [r3, #28]
 827 0354 42F08052 		orr	r2, r2, #268435456
 828 0358 DA61     		str	r2, [r3, #28]
 829 035a DB69     		ldr	r3, [r3, #28]
 830 035c 03F08053 		and	r3, r3, #268435456
 831 0360 0193     		str	r3, [sp, #4]
 832 0362 019B     		ldr	r3, [sp, #4]
 833              	.LVL68:
 834              	.LBE219:
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pwrclkchanged = SET;
 835              		.loc 1 460 0
 836 0364 0125     		movs	r5, #1
 837              	.LVL69:
 838              	.L46:
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 839              		.loc 1 463 0
 840 0366 A74B     		ldr	r3, .L113+8
 841 0368 1B68     		ldr	r3, [r3]
 842 036a 13F4807F 		tst	r3, #256
 843 036e 18D0     		beq	.L101
 844              	.L47:
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
ARM GAS  /tmp/cc0KFdmJ.s 			page 34


 845              		.loc 1 481 0
 846 0370 E368     		ldr	r3, [r4, #12]
 847 0372 012B     		cmp	r3, #1
 848 0374 29D0     		beq	.L102
 849              		.loc 1 481 0 is_stmt 0 discriminator 2
 850 0376 73BB     		cbnz	r3, .L52
 851              		.loc 1 481 0 discriminator 3
 852 0378 03F18043 		add	r3, r3, #1073741824
 853 037c 03F50433 		add	r3, r3, #135168
 854 0380 1A6A     		ldr	r2, [r3, #32]
 855 0382 22F00102 		bic	r2, r2, #1
 856 0386 1A62     		str	r2, [r3, #32]
 857 0388 1A6A     		ldr	r2, [r3, #32]
 858 038a 22F00402 		bic	r2, r2, #4
 859 038e 1A62     		str	r2, [r3, #32]
 860              	.L51:
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 861              		.loc 1 483 0 is_stmt 1
 862 0390 E368     		ldr	r3, [r4, #12]
 863 0392 002B     		cmp	r3, #0
 864 0394 5DD0     		beq	.L54
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 865              		.loc 1 486 0
 866 0396 FFF7FEFF 		bl	HAL_GetTick
 867              	.LVL70:
 868 039a 0646     		mov	r6, r0
 869              	.LVL71:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 870              		.loc 1 489 0
 871 039c 47E0     		b	.L55
 872              	.LVL72:
 873              	.L85:
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 874              		.loc 1 450 0
 875 039e 0025     		movs	r5, #0
 876 03a0 E1E7     		b	.L46
 877              	.LVL73:
 878              	.L101:
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 879              		.loc 1 466 0
 880 03a2 984A     		ldr	r2, .L113+8
 881 03a4 1368     		ldr	r3, [r2]
 882 03a6 43F48073 		orr	r3, r3, #256
 883 03aa 1360     		str	r3, [r2]
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 884              		.loc 1 469 0
 885 03ac FFF7FEFF 		bl	HAL_GetTick
 886              	.LVL74:
 887 03b0 0646     		mov	r6, r0
 888              	.LVL75:
 889              	.L48:
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/cc0KFdmJ.s 			page 35


 890              		.loc 1 471 0
 891 03b2 944B     		ldr	r3, .L113+8
 892 03b4 1B68     		ldr	r3, [r3]
 893 03b6 13F4807F 		tst	r3, #256
 894 03ba D9D1     		bne	.L47
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 895              		.loc 1 473 0
 896 03bc FFF7FEFF 		bl	HAL_GetTick
 897              	.LVL76:
 898 03c0 801B     		subs	r0, r0, r6
 899 03c2 6428     		cmp	r0, #100
 900 03c4 F5D9     		bls	.L48
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 901              		.loc 1 475 0
 902 03c6 0320     		movs	r0, #3
 903 03c8 15E1     		b	.L10
 904              	.LVL77:
 905              	.L102:
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 906              		.loc 1 481 0 discriminator 1
 907 03ca 8D4A     		ldr	r2, .L113+4
 908 03cc 136A     		ldr	r3, [r2, #32]
 909 03ce 43F00103 		orr	r3, r3, #1
 910 03d2 1362     		str	r3, [r2, #32]
 911 03d4 DCE7     		b	.L51
 912              	.L52:
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 913              		.loc 1 481 0 is_stmt 0 discriminator 4
 914 03d6 052B     		cmp	r3, #5
 915 03d8 09D0     		beq	.L103
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 916              		.loc 1 481 0 discriminator 6
 917 03da 894B     		ldr	r3, .L113+4
 918 03dc 1A6A     		ldr	r2, [r3, #32]
 919 03de 22F00102 		bic	r2, r2, #1
 920 03e2 1A62     		str	r2, [r3, #32]
 921 03e4 1A6A     		ldr	r2, [r3, #32]
 922 03e6 22F00402 		bic	r2, r2, #4
 923 03ea 1A62     		str	r2, [r3, #32]
 924 03ec D0E7     		b	.L51
 925              	.L103:
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 926              		.loc 1 481 0 discriminator 5
 927 03ee 844B     		ldr	r3, .L113+4
 928 03f0 1A6A     		ldr	r2, [r3, #32]
 929 03f2 42F00402 		orr	r2, r2, #4
 930 03f6 1A62     		str	r2, [r3, #32]
 931 03f8 1A6A     		ldr	r2, [r3, #32]
 932 03fa 42F00102 		orr	r2, r2, #1
 933 03fe 1A62     		str	r2, [r3, #32]
 934 0400 C6E7     		b	.L51
 935              	.LVL78:
 936              	.L104:
 937              		.loc 1 489 0 is_stmt 1 discriminator 4
 938 0402 7F4B     		ldr	r3, .L113+4
 939 0404 196A     		ldr	r1, [r3, #32]
 940              	.L57:
ARM GAS  /tmp/cc0KFdmJ.s 			page 36


 941              	.LVL79:
 942              	.LBB220:
 943              	.LBB221:
 944              		.loc 2 531 0 discriminator 11
 945 0406 0223     		movs	r3, #2
 946              		.syntax unified
 947              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 948 0408 93FAA3F3 		rbit r3, r3
 949              	@ 0 "" 2
 950              	.LVL80:
 951              		.thumb
 952              		.syntax unified
 953              	.LBE221:
 954              	.LBE220:
 955              		.loc 1 489 0 discriminator 11
 956 040c B3FA83F3 		clz	r3, r3
 957 0410 03F01F03 		and	r3, r3, #31
 958 0414 0122     		movs	r2, #1
 959 0416 02FA03F3 		lsl	r3, r2, r3
 960 041a 1942     		tst	r1, r3
 961 041c 45D1     		bne	.L59
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 962              		.loc 1 491 0
 963 041e FFF7FEFF 		bl	HAL_GetTick
 964              	.LVL81:
 965 0422 801B     		subs	r0, r0, r6
 966 0424 41F28833 		movw	r3, #5000
 967 0428 9842     		cmp	r0, r3
 968 042a 00F2DF80 		bhi	.L87
 969              	.L55:
 970              	.LVL82:
 971              	.LBB222:
 972              	.LBB223:
 973              		.loc 2 531 0
 974 042e 0223     		movs	r3, #2
 975              		.syntax unified
 976              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 977 0430 93FAA3F2 		rbit r2, r3
 978              	@ 0 "" 2
 979              	.LVL83:
 980              		.thumb
 981              		.syntax unified
 982              	.LBE223:
 983              	.LBE222:
 984              	.LBB224:
 985              	.LBB225:
 986              		.syntax unified
 987              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 988 0434 93FAA3F3 		rbit r3, r3
 989              	@ 0 "" 2
 990              	.LVL84:
 991              		.thumb
 992              		.syntax unified
 993              	.LBE225:
 994              	.LBE224:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/cc0KFdmJ.s 			page 37


 995              		.loc 1 489 0
 996 0438 B3FA83F3 		clz	r3, r3
 997 043c 5B09     		lsrs	r3, r3, #5
 998 043e 43F00203 		orr	r3, r3, #2
 999 0442 022B     		cmp	r3, #2
 1000 0444 DDD0     		beq	.L104
 1001              	.LVL85:
 1002              	.LBB226:
 1003              	.LBB227:
 1004              		.loc 2 531 0
 1005 0446 0223     		movs	r3, #2
 1006              		.syntax unified
 1007              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1008 0448 93FAA3F3 		rbit r3, r3
 1009              	@ 0 "" 2
 1010              	.LVL86:
 1011              		.thumb
 1012              		.syntax unified
 1013              	.LBE227:
 1014              	.LBE226:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1015              		.loc 1 489 0
 1016 044c 6C4B     		ldr	r3, .L113+4
 1017 044e 596A     		ldr	r1, [r3, #36]
 1018 0450 D9E7     		b	.L57
 1019              	.LVL87:
 1020              	.L54:
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1021              		.loc 1 500 0
 1022 0452 FFF7FEFF 		bl	HAL_GetTick
 1023              	.LVL88:
 1024 0456 0646     		mov	r6, r0
 1025              	.LVL89:
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1026              		.loc 1 503 0
 1027 0458 15E0     		b	.L60
 1028              	.LVL90:
 1029              	.L105:
 1030              		.loc 1 503 0 is_stmt 0 discriminator 4
 1031 045a 694B     		ldr	r3, .L113+4
 1032 045c 196A     		ldr	r1, [r3, #32]
 1033              	.L62:
 1034              	.LVL91:
 1035              	.LBB228:
 1036              	.LBB229:
 1037              		.loc 2 531 0 is_stmt 1 discriminator 11
 1038 045e 0223     		movs	r3, #2
ARM GAS  /tmp/cc0KFdmJ.s 			page 38


 1039              		.syntax unified
 1040              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1041 0460 93FAA3F3 		rbit r3, r3
 1042              	@ 0 "" 2
 1043              	.LVL92:
 1044              		.thumb
 1045              		.syntax unified
 1046              	.LBE229:
 1047              	.LBE228:
 1048              		.loc 1 503 0 discriminator 11
 1049 0464 B3FA83F3 		clz	r3, r3
 1050 0468 03F01F03 		and	r3, r3, #31
 1051 046c 0122     		movs	r2, #1
 1052 046e 02FA03F3 		lsl	r3, r2, r3
 1053 0472 1942     		tst	r1, r3
 1054 0474 19D0     		beq	.L59
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1055              		.loc 1 505 0
 1056 0476 FFF7FEFF 		bl	HAL_GetTick
 1057              	.LVL93:
 1058 047a 801B     		subs	r0, r0, r6
 1059 047c 41F28833 		movw	r3, #5000
 1060 0480 9842     		cmp	r0, r3
 1061 0482 00F2B580 		bhi	.L88
 1062              	.L60:
 1063              	.LVL94:
 1064              	.LBB230:
 1065              	.LBB231:
 1066              		.loc 2 531 0
 1067 0486 0223     		movs	r3, #2
 1068              		.syntax unified
 1069              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1070 0488 93FAA3F2 		rbit r2, r3
 1071              	@ 0 "" 2
 1072              	.LVL95:
 1073              		.thumb
 1074              		.syntax unified
 1075              	.LBE231:
 1076              	.LBE230:
 1077              	.LBB232:
 1078              	.LBB233:
 1079              		.syntax unified
 1080              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1081 048c 93FAA3F3 		rbit r3, r3
 1082              	@ 0 "" 2
 1083              	.LVL96:
 1084              		.thumb
 1085              		.syntax unified
 1086              	.LBE233:
 1087              	.LBE232:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1088              		.loc 1 503 0
 1089 0490 B3FA83F3 		clz	r3, r3
 1090 0494 5B09     		lsrs	r3, r3, #5
 1091 0496 43F00203 		orr	r3, r3, #2
 1092 049a 022B     		cmp	r3, #2
ARM GAS  /tmp/cc0KFdmJ.s 			page 39


 1093 049c DDD0     		beq	.L105
 1094              	.LVL97:
 1095              	.LBB234:
 1096              	.LBB235:
 1097              		.loc 2 531 0
 1098 049e 0223     		movs	r3, #2
 1099              		.syntax unified
 1100              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1101 04a0 93FAA3F3 		rbit r3, r3
 1102              	@ 0 "" 2
 1103              	.LVL98:
 1104              		.thumb
 1105              		.syntax unified
 1106              	.LBE235:
 1107              	.LBE234:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1108              		.loc 1 503 0
 1109 04a4 564B     		ldr	r3, .L113+4
 1110 04a6 596A     		ldr	r1, [r3, #36]
 1111 04a8 D9E7     		b	.L62
 1112              	.L59:
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1113              		.loc 1 513 0
 1114 04aa B5BB     		cbnz	r5, .L106
 1115              	.LVL99:
 1116              	.L45:
 1117              	.LBE218:
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1118              		.loc 1 522 0
 1119 04ac E369     		ldr	r3, [r4, #28]
 1120 04ae 002B     		cmp	r3, #0
 1121 04b0 00F0A080 		beq	.L89
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1122              		.loc 1 525 0
 1123 04b4 524A     		ldr	r2, .L113+4
 1124 04b6 5268     		ldr	r2, [r2, #4]
 1125 04b8 02F00C02 		and	r2, r2, #12
 1126 04bc 082A     		cmp	r2, #8
 1127 04be 00F0A380 		beq	.L90
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     { 
ARM GAS  /tmp/cc0KFdmJ.s 			page 40


 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1128              		.loc 1 527 0
 1129 04c2 022B     		cmp	r3, #2
 1130 04c4 2FD0     		beq	.L107
 1131              	.LVL100:
 1132              	.LBB236:
 1133              	.LBB237:
 1134              		.loc 2 531 0
 1135 04c6 4FF08073 		mov	r3, #16777216
 1136              		.syntax unified
 1137              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1138 04ca 93FAA3F3 		rbit r3, r3
 1139              	@ 0 "" 2
 1140              	.LVL101:
 1141              		.thumb
 1142              		.syntax unified
 1143              	.LBE237:
 1144              	.LBE236:
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Check the parameters */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the main PLL clock source and multiplication factor. */
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Enable the main PLL. */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
ARM GAS  /tmp/cc0KFdmJ.s 			page 41


 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is ready */
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1145              		.loc 1 579 0
 1146 04ce B3FA83F3 		clz	r3, r3
 1147 04d2 03F18453 		add	r3, r3, #276824064
 1148 04d6 03F58413 		add	r3, r3, #1081344
 1149 04da 9B00     		lsls	r3, r3, #2
 1150 04dc 0022     		movs	r2, #0
 1151 04de 1A60     		str	r2, [r3]
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1152              		.loc 1 582 0
 1153 04e0 FFF7FEFF 		bl	HAL_GetTick
 1154              	.LVL102:
 1155 04e4 0446     		mov	r4, r0
 1156              	.LVL103:
 1157              	.L73:
 1158              	.LBB238:
 1159              	.LBB239:
 1160              		.loc 2 531 0
 1161 04e6 4FF00073 		mov	r3, #33554432
 1162              		.syntax unified
 1163              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1164 04ea 93FAA3F3 		rbit r3, r3
 1165              	@ 0 "" 2
 1166              	.LVL104:
 1167              		.thumb
 1168              		.syntax unified
 1169              	.LBE239:
 1170              	.LBE238:
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1171              		.loc 1 585 0
 1172 04ee 444B     		ldr	r3, .L113+4
 1173 04f0 1968     		ldr	r1, [r3]
 1174              	.LVL105:
 1175              	.LBB240:
 1176              	.LBB241:
 1177              		.loc 2 531 0
 1178 04f2 4FF00073 		mov	r3, #33554432
 1179              		.syntax unified
 1180              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1181 04f6 93FAA3F3 		rbit r3, r3
 1182              	@ 0 "" 2
ARM GAS  /tmp/cc0KFdmJ.s 			page 42


 1183              	.LVL106:
 1184              		.thumb
 1185              		.syntax unified
 1186              	.LBE241:
 1187              	.LBE240:
 1188              		.loc 1 585 0
 1189 04fa B3FA83F3 		clz	r3, r3
 1190 04fe 03F01F03 		and	r3, r3, #31
 1191 0502 0122     		movs	r2, #1
 1192 0504 02FA03F3 		lsl	r3, r2, r3
 1193 0508 1942     		tst	r1, r3
 1194 050a 6BD0     		beq	.L108
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1195              		.loc 1 587 0
 1196 050c FFF7FEFF 		bl	HAL_GetTick
 1197              	.LVL107:
 1198 0510 001B     		subs	r0, r0, r4
 1199 0512 0228     		cmp	r0, #2
 1200 0514 E7D9     		bls	.L73
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1201              		.loc 1 589 0
 1202 0516 0320     		movs	r0, #3
 1203 0518 6DE0     		b	.L10
 1204              	.LVL108:
 1205              	.L106:
 1206              	.LBB242:
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1207              		.loc 1 515 0
 1208 051a 394A     		ldr	r2, .L113+4
 1209 051c D369     		ldr	r3, [r2, #28]
 1210 051e 23F08053 		bic	r3, r3, #268435456
 1211 0522 D361     		str	r3, [r2, #28]
 1212 0524 C2E7     		b	.L45
 1213              	.LVL109:
 1214              	.L107:
 1215              	.LBE242:
 1216              	.LBB243:
 1217              	.LBB244:
 1218              		.loc 2 531 0
 1219 0526 4FF08073 		mov	r3, #16777216
 1220              		.syntax unified
 1221              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1222 052a 93FAA3F3 		rbit r3, r3
 1223              	@ 0 "" 2
 1224              	.LVL110:
 1225              		.thumb
 1226              		.syntax unified
 1227              	.LBE244:
 1228              	.LBE243:
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1229              		.loc 1 537 0
 1230 052e B3FA83F3 		clz	r3, r3
 1231 0532 03F18453 		add	r3, r3, #276824064
 1232 0536 03F58413 		add	r3, r3, #1081344
 1233 053a 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/cc0KFdmJ.s 			page 43


 1234 053c 0022     		movs	r2, #0
 1235 053e 1A60     		str	r2, [r3]
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1236              		.loc 1 540 0
 1237 0540 FFF7FEFF 		bl	HAL_GetTick
 1238              	.LVL111:
 1239 0544 0546     		mov	r5, r0
 1240              	.LVL112:
 1241              	.L65:
 1242              	.LBB245:
 1243              	.LBB246:
 1244              		.loc 2 531 0
 1245 0546 4FF00073 		mov	r3, #33554432
 1246              		.syntax unified
 1247              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1248 054a 93FAA3F3 		rbit r3, r3
 1249              	@ 0 "" 2
 1250              	.LVL113:
 1251              		.thumb
 1252              		.syntax unified
 1253              	.LBE246:
 1254              	.LBE245:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1255              		.loc 1 543 0
 1256 054e 2C4B     		ldr	r3, .L113+4
 1257 0550 1968     		ldr	r1, [r3]
 1258              	.LVL114:
 1259              	.LBB247:
 1260              	.LBB248:
 1261              		.loc 2 531 0
 1262 0552 4FF00073 		mov	r3, #33554432
 1263              		.syntax unified
 1264              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1265 0556 93FAA3F3 		rbit r3, r3
 1266              	@ 0 "" 2
 1267              	.LVL115:
 1268              		.thumb
 1269              		.syntax unified
 1270              	.LBE248:
 1271              	.LBE247:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1272              		.loc 1 543 0
 1273 055a B3FA83F3 		clz	r3, r3
 1274 055e 03F01F03 		and	r3, r3, #31
 1275 0562 0122     		movs	r2, #1
 1276 0564 02FA03F3 		lsl	r3, r2, r3
 1277 0568 1942     		tst	r1, r3
 1278 056a 06D0     		beq	.L109
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 1279              		.loc 1 545 0
 1280 056c FFF7FEFF 		bl	HAL_GetTick
 1281              	.LVL116:
 1282 0570 401B     		subs	r0, r0, r5
 1283 0572 0228     		cmp	r0, #2
 1284 0574 E7D9     		bls	.L65
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1285              		.loc 1 547 0
ARM GAS  /tmp/cc0KFdmJ.s 			page 44


 1286 0576 0320     		movs	r0, #3
 1287 0578 3DE0     		b	.L10
 1288              	.L109:
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 1289              		.loc 1 558 0
 1290 057a 2149     		ldr	r1, .L113+4
 1291 057c 4B68     		ldr	r3, [r1, #4]
 1292 057e 23F47413 		bic	r3, r3, #3997696
 1293 0582 626A     		ldr	r2, [r4, #36]
 1294 0584 206A     		ldr	r0, [r4, #32]
 1295 0586 0243     		orrs	r2, r2, r0
 1296 0588 1343     		orrs	r3, r3, r2
 1297 058a 4B60     		str	r3, [r1, #4]
 1298              	.LVL117:
 1299              	.LBB249:
 1300              	.LBB250:
 1301              		.loc 2 531 0
 1302 058c 4FF08073 		mov	r3, #16777216
 1303              		.syntax unified
 1304              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1305 0590 93FAA3F3 		rbit r3, r3
 1306              	@ 0 "" 2
 1307              	.LVL118:
 1308              		.thumb
 1309              		.syntax unified
 1310              	.LBE250:
 1311              	.LBE249:
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1312              		.loc 1 562 0
 1313 0594 B3FA83F3 		clz	r3, r3
 1314 0598 03F18453 		add	r3, r3, #276824064
 1315 059c 03F58413 		add	r3, r3, #1081344
 1316 05a0 9B00     		lsls	r3, r3, #2
 1317 05a2 0122     		movs	r2, #1
 1318 05a4 1A60     		str	r2, [r3]
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1319              		.loc 1 565 0
 1320 05a6 FFF7FEFF 		bl	HAL_GetTick
 1321              	.LVL119:
 1322 05aa 0446     		mov	r4, r0
 1323              	.LVL120:
 1324              	.L69:
 1325              	.LBB251:
 1326              	.LBB252:
 1327              		.loc 2 531 0
 1328 05ac 4FF00073 		mov	r3, #33554432
 1329              		.syntax unified
 1330              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1331 05b0 93FAA3F3 		rbit r3, r3
 1332              	@ 0 "" 2
 1333              	.LVL121:
 1334              		.thumb
 1335              		.syntax unified
 1336              	.LBE252:
 1337              	.LBE251:
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1338              		.loc 1 568 0
ARM GAS  /tmp/cc0KFdmJ.s 			page 45


 1339 05b4 124B     		ldr	r3, .L113+4
 1340 05b6 1968     		ldr	r1, [r3]
 1341              	.LVL122:
 1342              	.LBB253:
 1343              	.LBB254:
 1344              		.loc 2 531 0
 1345 05b8 4FF00073 		mov	r3, #33554432
 1346              		.syntax unified
 1347              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1348 05bc 93FAA3F3 		rbit r3, r3
 1349              	@ 0 "" 2
 1350              	.LVL123:
 1351              		.thumb
 1352              		.syntax unified
 1353              	.LBE254:
 1354              	.LBE253:
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1355              		.loc 1 568 0
 1356 05c0 B3FA83F3 		clz	r3, r3
 1357 05c4 03F01F03 		and	r3, r3, #31
 1358 05c8 0122     		movs	r2, #1
 1359 05ca 02FA03F3 		lsl	r3, r2, r3
 1360 05ce 1942     		tst	r1, r3
 1361 05d0 06D1     		bne	.L110
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 1362              		.loc 1 570 0
 1363 05d2 FFF7FEFF 		bl	HAL_GetTick
 1364              	.LVL124:
 1365 05d6 001B     		subs	r0, r0, r4
 1366 05d8 0228     		cmp	r0, #2
 1367 05da E7D9     		bls	.L69
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1368              		.loc 1 572 0
 1369 05dc 0320     		movs	r0, #3
 1370 05de 0AE0     		b	.L10
 1371              	.L110:
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 1372              		.loc 1 600 0
 1373 05e0 0020     		movs	r0, #0
 1374 05e2 08E0     		b	.L10
 1375              	.L108:
 1376 05e4 0020     		movs	r0, #0
 1377 05e6 06E0     		b	.L10
 1378              	.LVL125:
 1379              	.L97:
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1380              		.loc 1 296 0
ARM GAS  /tmp/cc0KFdmJ.s 			page 46


 1381 05e8 0120     		movs	r0, #1
 1382              	.LVL126:
 1383 05ea 04E0     		b	.L10
 1384              	.LVL127:
 1385              	.L87:
 1386              	.LBB255:
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1387              		.loc 1 493 0
 1388 05ec 0320     		movs	r0, #3
 1389 05ee 02E0     		b	.L10
 1390              	.L88:
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1391              		.loc 1 507 0
 1392 05f0 0320     		movs	r0, #3
 1393 05f2 00E0     		b	.L10
 1394              	.LVL128:
 1395              	.L89:
 1396              	.LBE255:
 1397              		.loc 1 600 0
 1398 05f4 0020     		movs	r0, #0
 1399              	.LVL129:
 1400              	.L10:
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1401              		.loc 1 601 0
 1402 05f6 02B0     		add	sp, sp, #8
 1403              	.LCFI2:
 1404              		.cfi_remember_state
 1405              		.cfi_def_cfa_offset 16
 1406              		@ sp needed
 1407 05f8 70BD     		pop	{r4, r5, r6, pc}
 1408              	.L114:
 1409 05fa 00BF     		.align	2
 1410              	.L113:
 1411 05fc 20819010 		.word	277905696
 1412 0600 00100240 		.word	1073876992
 1413 0604 00700040 		.word	1073770496
 1414              	.LVL130:
 1415              	.L90:
 1416              	.LCFI3:
 1417              		.cfi_restore_state
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1418              		.loc 1 596 0
 1419 0608 0120     		movs	r0, #1
 1420 060a F4E7     		b	.L10
 1421              		.cfi_endproc
 1422              	.LFE125:
 1424              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1425              		.align	1
 1426              		.global	HAL_RCC_MCOConfig
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1430              		.fpu fpv4-sp-d16
 1432              	HAL_RCC_MCOConfig:
 1433              	.LFB127:
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
ARM GAS  /tmp/cc0KFdmJ.s 			page 47


 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         currently used as system clock source.
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     (HCLK) of the device. */
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
ARM GAS  /tmp/cc0KFdmJ.s 			page 48


 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Get Start Tick */
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
ARM GAS  /tmp/cc0KFdmJ.s 			page 49


 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }      
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim   
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
ARM GAS  /tmp/cc0KFdmJ.s 			page 50


 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================  
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     frequencies.
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
ARM GAS  /tmp/cc0KFdmJ.s 			page 51


 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1434              		.loc 1 836 0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 24
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              	.LVL131:
 1439 0000 70B5     		push	{r4, r5, r6, lr}
 1440              	.LCFI4:
 1441              		.cfi_def_cfa_offset 16
 1442              		.cfi_offset 4, -16
 1443              		.cfi_offset 5, -12
 1444              		.cfi_offset 6, -8
 1445              		.cfi_offset 14, -4
 1446 0002 86B0     		sub	sp, sp, #24
 1447              	.LCFI5:
 1448              		.cfi_def_cfa_offset 40
 1449 0004 0D46     		mov	r5, r1
 1450 0006 1646     		mov	r6, r2
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1451              		.loc 1 845 0
 1452 0008 0223     		movs	r3, #2
 1453 000a 0293     		str	r3, [sp, #8]
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1454              		.loc 1 846 0
 1455 000c 0323     		movs	r3, #3
 1456 000e 0493     		str	r3, [sp, #16]
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1457              		.loc 1 847 0
 1458 0010 0023     		movs	r3, #0
 1459 0012 0393     		str	r3, [sp, #12]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1460              		.loc 1 848 0
 1461 0014 4FF48072 		mov	r2, #256
 1462              	.LVL132:
 1463 0018 0192     		str	r2, [sp, #4]
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1464              		.loc 1 849 0
 1465 001a 0593     		str	r3, [sp, #20]
 1466              	.LBB256:
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1467              		.loc 1 852 0
 1468 001c 0B4C     		ldr	r4, .L117
 1469 001e 6369     		ldr	r3, [r4, #20]
ARM GAS  /tmp/cc0KFdmJ.s 			page 52


 1470 0020 43F40033 		orr	r3, r3, #131072
 1471 0024 6361     		str	r3, [r4, #20]
 1472 0026 6369     		ldr	r3, [r4, #20]
 1473 0028 03F40033 		and	r3, r3, #131072
 1474 002c 0093     		str	r3, [sp]
 1475 002e 009B     		ldr	r3, [sp]
 1476              	.LBE256:
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1477              		.loc 1 854 0
 1478 0030 01A9     		add	r1, sp, #4
 1479              	.LVL133:
 1480 0032 4FF09040 		mov	r0, #1207959552
 1481              	.LVL134:
 1482 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1483              	.LVL135:
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO clock source */
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1484              		.loc 1 857 0
 1485 003a 6268     		ldr	r2, [r4, #4]
 1486 003c 22F0EE42 		bic	r2, r2, #1996488704
 1487 0040 3543     		orrs	r5, r5, r6
 1488              	.LVL136:
 1489 0042 2A43     		orrs	r2, r2, r5
 1490 0044 6260     		str	r2, [r4, #4]
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1491              		.loc 1 858 0
 1492 0046 06B0     		add	sp, sp, #24
 1493              	.LCFI6:
 1494              		.cfi_def_cfa_offset 16
 1495              		@ sp needed
 1496 0048 70BD     		pop	{r4, r5, r6, pc}
 1497              	.LVL137:
 1498              	.L118:
 1499 004a 00BF     		.align	2
 1500              	.L117:
 1501 004c 00100240 		.word	1073876992
 1502              		.cfi_endproc
 1503              	.LFE127:
 1505              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1506              		.align	1
 1507              		.global	HAL_RCC_EnableCSS
 1508              		.syntax unified
 1509              		.thumb
 1510              		.thumb_func
 1511              		.fpu fpv4-sp-d16
 1513              	HAL_RCC_EnableCSS:
 1514              	.LFB128:
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
ARM GAS  /tmp/cc0KFdmJ.s 			page 53


 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1515              		.loc 1 870 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519              		@ link register save eliminated.
 1520              	.LVL138:
 1521              	.LBB257:
 1522              	.LBB258:
 1523              		.loc 2 531 0
 1524 0000 4FF40023 		mov	r3, #524288
 1525              		.syntax unified
 1526              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1527 0004 93FAA3F3 		rbit r3, r3
 1528              	@ 0 "" 2
 1529              	.LVL139:
 1530              		.thumb
 1531              		.syntax unified
 1532              	.LBE258:
 1533              	.LBE257:
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1534              		.loc 1 871 0
 1535 0008 B3FA83F3 		clz	r3, r3
 1536 000c 03F18453 		add	r3, r3, #276824064
 1537 0010 03F58413 		add	r3, r3, #1081344
 1538 0014 9B00     		lsls	r3, r3, #2
 1539 0016 0122     		movs	r2, #1
 1540 0018 1A60     		str	r2, [r3]
 1541 001a 7047     		bx	lr
 1542              		.cfi_endproc
 1543              	.LFE128:
 1545              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1546              		.align	1
 1547              		.global	HAL_RCC_DisableCSS
 1548              		.syntax unified
 1549              		.thumb
 1550              		.thumb_func
 1551              		.fpu fpv4-sp-d16
 1553              	HAL_RCC_DisableCSS:
 1554              	.LFB129:
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1555              		.loc 1 879 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559              		@ link register save eliminated.
 1560              	.LVL140:
ARM GAS  /tmp/cc0KFdmJ.s 			page 54


 1561              	.LBB259:
 1562              	.LBB260:
 1563              		.loc 2 531 0
 1564 0000 4FF40023 		mov	r3, #524288
 1565              		.syntax unified
 1566              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1567 0004 93FAA3F3 		rbit r3, r3
 1568              	@ 0 "" 2
 1569              	.LVL141:
 1570              		.thumb
 1571              		.syntax unified
 1572              	.LBE260:
 1573              	.LBE259:
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1574              		.loc 1 880 0
 1575 0008 B3FA83F3 		clz	r3, r3
 1576 000c 03F18453 		add	r3, r3, #276824064
 1577 0010 03F58413 		add	r3, r3, #1081344
 1578 0014 9B00     		lsls	r3, r3, #2
 1579 0016 0022     		movs	r2, #0
 1580 0018 1A60     		str	r2, [r3]
 1581 001a 7047     		bx	lr
 1582              		.cfi_endproc
 1583              	.LFE129:
 1585              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1586              		.align	1
 1587              		.global	HAL_RCC_GetSysClockFreq
 1588              		.syntax unified
 1589              		.thumb
 1590              		.thumb_func
 1591              		.fpu fpv4-sp-d16
 1593              	HAL_RCC_GetSysClockFreq:
 1594              	.LFB130:
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         constant and the selected clock source:
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               in voltage and temperature.
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                have wrong result.
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                  
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         value for HSE crystal.
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
ARM GAS  /tmp/cc0KFdmJ.s 			page 55


 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval SYSCLK frequency
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1595              		.loc 1 913 0
 1596              		.cfi_startproc
 1597              		@ args = 0, pretend = 0, frame = 0
 1598              		@ frame_needed = 0, uses_anonymous_args = 0
 1599              		@ link register save eliminated.
 1600              	.LVL142:
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1601              		.loc 1 917 0
 1602 0000 164B     		ldr	r3, .L128
 1603 0002 5B68     		ldr	r3, [r3, #4]
 1604              	.LVL143:
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1605              		.loc 1 920 0
 1606 0004 03F00C02 		and	r2, r3, #12
 1607 0008 082A     		cmp	r2, #8
 1608 000a 24D1     		bne	.L126
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLL
 1609              		.loc 1 929 0
 1610 000c 03F47011 		and	r1, r3, #3932160
 1611              	.LVL144:
 1612              	.LBB261:
 1613              	.LBB262:
 1614              		.loc 2 531 0
 1615 0010 4FF47012 		mov	r2, #3932160
 1616              		.syntax unified
 1617              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1618 0014 92FAA2F2 		rbit r2, r2
 1619              	@ 0 "" 2
 1620              	.LVL145:
 1621              		.thumb
 1622              		.syntax unified
 1623              	.LBE262:
 1624              	.LBE261:
 1625              		.loc 1 929 0
 1626 0018 B2FA82F2 		clz	r2, r2
ARM GAS  /tmp/cc0KFdmJ.s 			page 56


 1627 001c 21FA02F2 		lsr	r2, r1, r2
 1628 0020 0F49     		ldr	r1, .L128+4
 1629 0022 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 1630              	.LVL146:
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 1631              		.loc 1 930 0
 1632 0024 0D4A     		ldr	r2, .L128
 1633 0026 D26A     		ldr	r2, [r2, #44]
 1634 0028 02F00F02 		and	r2, r2, #15
 1635              	.LVL147:
 1636              	.LBB263:
 1637              	.LBB264:
 1638              		.loc 2 531 0
 1639 002c 0F21     		movs	r1, #15
 1640              		.syntax unified
 1641              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1642 002e 91FAA1F1 		rbit r1, r1
 1643              	@ 0 "" 2
 1644              	.LVL148:
 1645              		.thumb
 1646              		.syntax unified
 1647              	.LBE264:
 1648              	.LBE263:
 1649              		.loc 1 930 0
 1650 0032 B1FA81F1 		clz	r1, r1
 1651 0036 CA40     		lsrs	r2, r2, r1
 1652 0038 0A49     		ldr	r1, .L128+8
 1653 003a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1654              	.LVL149:
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
 1655              		.loc 1 932 0
 1656 003c 13F4803F 		tst	r3, #65536
 1657 0040 03D1     		bne	.L127
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE >> 1U) * pllmul;
 1658              		.loc 1 940 0
 1659 0042 094B     		ldr	r3, .L128+12
 1660              	.LVL150:
 1661 0044 03FB00F0 		mul	r0, r3, r0
 1662              	.LVL151:
 1663 0048 7047     		bx	lr
 1664              	.LVL152:
 1665              	.L127:
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1666              		.loc 1 935 0
 1667 004a 084B     		ldr	r3, .L128+16
 1668              	.LVL153:
 1669 004c B3FBF2F3 		udiv	r3, r3, r2
 1670 0050 03FB00F0 		mul	r0, r3, r0
 1671              	.LVL154:
ARM GAS  /tmp/cc0KFdmJ.s 			page 57


 1672 0054 7047     		bx	lr
 1673              	.LVL155:
 1674              	.L126:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 1675              		.loc 1 924 0
 1676 0056 0548     		ldr	r0, .L128+16
 1677              	.LVL156:
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC_HSE_PREDIV) == RCC_CFGR_PLLSRC_HSE_PREDIV)
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = pllclk;
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     default: /* HSI used as system clock */
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return sysclockfreq;
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1678              		.loc 1 965 0
 1679 0058 7047     		bx	lr
 1680              	.L129:
 1681 005a 00BF     		.align	2
 1682              	.L128:
 1683 005c 00100240 		.word	1073876992
 1684 0060 00000000 		.word	.LANCHOR0
 1685 0064 00000000 		.word	.LANCHOR1
 1686 0068 00093D00 		.word	4000000
 1687 006c 00127A00 		.word	8000000
 1688              		.cfi_endproc
 1689              	.LFE130:
 1691              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1692              		.align	1
 1693              		.global	HAL_RCC_ClockConfig
 1694              		.syntax unified
 1695              		.thumb
 1696              		.thumb_func
 1697              		.fpu fpv4-sp-d16
 1699              	HAL_RCC_ClockConfig:
 1700              	.LFB126:
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1701              		.loc 1 627 0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc0KFdmJ.s 			page 58


 1704              		@ frame_needed = 0, uses_anonymous_args = 0
 1705              	.LVL157:
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1706              		.loc 1 640 0
 1707 0000 704B     		ldr	r3, .L168
 1708 0002 1B68     		ldr	r3, [r3]
 1709 0004 03F00703 		and	r3, r3, #7
 1710 0008 8B42     		cmp	r3, r1
 1711 000a 0CD2     		bcs	.L131
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1712              		.loc 1 643 0
 1713 000c 6D4A     		ldr	r2, .L168
 1714 000e 1368     		ldr	r3, [r2]
 1715 0010 23F00703 		bic	r3, r3, #7
 1716 0014 0B43     		orrs	r3, r3, r1
 1717 0016 1360     		str	r3, [r2]
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1718              		.loc 1 647 0
 1719 0018 1368     		ldr	r3, [r2]
 1720 001a 03F00703 		and	r3, r3, #7
 1721 001e 9942     		cmp	r1, r3
 1722 0020 01D0     		beq	.L131
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1723              		.loc 1 649 0
 1724 0022 0120     		movs	r0, #1
 1725              	.LVL158:
 1726 0024 7047     		bx	lr
 1727              	.LVL159:
 1728              	.L131:
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1729              		.loc 1 627 0
 1730 0026 70B5     		push	{r4, r5, r6, lr}
 1731              	.LCFI7:
 1732              		.cfi_def_cfa_offset 16
 1733              		.cfi_offset 4, -16
 1734              		.cfi_offset 5, -12
 1735              		.cfi_offset 6, -8
 1736              		.cfi_offset 14, -4
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 1737              		.loc 1 654 0
 1738 0028 0368     		ldr	r3, [r0]
 1739 002a 13F0020F 		tst	r3, #2
 1740 002e 06D0     		beq	.L133
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 1741              		.loc 1 657 0
 1742 0030 654A     		ldr	r2, .L168+4
 1743 0032 5368     		ldr	r3, [r2, #4]
 1744 0034 23F0F003 		bic	r3, r3, #240
 1745 0038 8468     		ldr	r4, [r0, #8]
 1746 003a 2343     		orrs	r3, r3, r4
 1747 003c 5360     		str	r3, [r2, #4]
 1748              	.L133:
 1749 003e 0D46     		mov	r5, r1
 1750 0040 0446     		mov	r4, r0
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1751              		.loc 1 661 0
 1752 0042 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc0KFdmJ.s 			page 59


 1753 0044 13F0010F 		tst	r3, #1
 1754 0048 7AD0     		beq	.L134
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1755              		.loc 1 666 0
 1756 004a 4368     		ldr	r3, [r0, #4]
 1757 004c 012B     		cmp	r3, #1
 1758 004e 2FD0     		beq	.L166
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1759              		.loc 1 675 0
 1760 0050 022B     		cmp	r3, #2
 1761 0052 42D0     		beq	.L167
 1762              	.LVL160:
 1763              	.LBB265:
 1764              	.LBB266:
 1765              		.loc 2 531 0
 1766 0054 0222     		movs	r2, #2
 1767              		.syntax unified
 1768              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1769 0056 92FAA2F2 		rbit r2, r2
 1770              	@ 0 "" 2
 1771              	.LVL161:
 1772              		.thumb
 1773              		.syntax unified
 1774              	.LBE266:
 1775              	.LBE265:
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1776              		.loc 1 687 0
 1777 005a 5B4A     		ldr	r2, .L168+4
 1778 005c 1068     		ldr	r0, [r2]
 1779              	.LVL162:
 1780              	.LBB267:
 1781              	.LBB268:
 1782              		.loc 2 531 0
 1783 005e 0222     		movs	r2, #2
 1784              		.syntax unified
 1785              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1786 0060 92FAA2F2 		rbit r2, r2
 1787              	@ 0 "" 2
 1788              	.LVL163:
 1789              		.thumb
 1790              		.syntax unified
 1791              	.LBE268:
 1792              	.LBE267:
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1793              		.loc 1 687 0
 1794 0064 B2FA82F2 		clz	r2, r2
 1795 0068 02F01F02 		and	r2, r2, #31
 1796 006c 0121     		movs	r1, #1
 1797              	.LVL164:
 1798 006e 01FA02F2 		lsl	r2, r1, r2
 1799 0072 1042     		tst	r0, r2
 1800 0074 00F0A480 		beq	.L157
 1801              	.L138:
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 1802              		.loc 1 692 0
 1803 0078 5349     		ldr	r1, .L168+4
 1804 007a 4A68     		ldr	r2, [r1, #4]
ARM GAS  /tmp/cc0KFdmJ.s 			page 60


 1805 007c 22F00302 		bic	r2, r2, #3
 1806 0080 1343     		orrs	r3, r3, r2
 1807 0082 4B60     		str	r3, [r1, #4]
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1808              		.loc 1 695 0
 1809 0084 FFF7FEFF 		bl	HAL_GetTick
 1810              	.LVL165:
 1811 0088 0646     		mov	r6, r0
 1812              	.LVL166:
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1813              		.loc 1 697 0
 1814 008a 6368     		ldr	r3, [r4, #4]
 1815 008c 012B     		cmp	r3, #1
 1816 008e 39D0     		beq	.L144
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1817              		.loc 1 707 0
 1818 0090 022B     		cmp	r3, #2
 1819 0092 46D0     		beq	.L147
 1820              	.LVL167:
 1821              	.L148:
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1822              		.loc 1 719 0
 1823 0094 4C4B     		ldr	r3, .L168+4
 1824 0096 5B68     		ldr	r3, [r3, #4]
 1825 0098 13F00C0F 		tst	r3, #12
 1826 009c 50D0     		beq	.L134
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1827              		.loc 1 721 0
 1828 009e FFF7FEFF 		bl	HAL_GetTick
 1829              	.LVL168:
 1830 00a2 801B     		subs	r0, r0, r6
 1831 00a4 41F28833 		movw	r3, #5000
 1832 00a8 9842     		cmp	r0, r3
 1833 00aa F3D9     		bls	.L148
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1834              		.loc 1 723 0
 1835 00ac 0320     		movs	r0, #3
 1836 00ae 70BD     		pop	{r4, r5, r6, pc}
 1837              	.LVL169:
 1838              	.L166:
 1839              	.LBB269:
 1840              	.LBB270:
 1841              		.loc 2 531 0
 1842 00b0 4FF40032 		mov	r2, #131072
 1843              		.syntax unified
 1844              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1845 00b4 92FAA2F2 		rbit r2, r2
 1846              	@ 0 "" 2
 1847              	.LVL170:
 1848              		.thumb
 1849              		.syntax unified
 1850              	.LBE270:
 1851              	.LBE269:
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1852              		.loc 1 669 0
 1853 00b8 434A     		ldr	r2, .L168+4
 1854 00ba 1068     		ldr	r0, [r2]
ARM GAS  /tmp/cc0KFdmJ.s 			page 61


 1855              	.LVL171:
 1856              	.LBB271:
 1857              	.LBB272:
 1858              		.loc 2 531 0
 1859 00bc 4FF40032 		mov	r2, #131072
 1860              		.syntax unified
 1861              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1862 00c0 92FAA2F2 		rbit r2, r2
 1863              	@ 0 "" 2
 1864              	.LVL172:
 1865              		.thumb
 1866              		.syntax unified
 1867              	.LBE272:
 1868              	.LBE271:
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1869              		.loc 1 669 0
 1870 00c4 B2FA82F2 		clz	r2, r2
 1871 00c8 02F01F02 		and	r2, r2, #31
 1872 00cc 0121     		movs	r1, #1
 1873              	.LVL173:
 1874 00ce 01FA02F2 		lsl	r2, r1, r2
 1875 00d2 1042     		tst	r0, r2
 1876 00d4 D0D1     		bne	.L138
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1877              		.loc 1 671 0
 1878 00d6 0120     		movs	r0, #1
 1879 00d8 70BD     		pop	{r4, r5, r6, pc}
 1880              	.LVL174:
 1881              	.L167:
 1882              	.LBB273:
 1883              	.LBB274:
 1884              		.loc 2 531 0
 1885 00da 4FF00072 		mov	r2, #33554432
 1886              		.syntax unified
 1887              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1888 00de 92FAA2F2 		rbit r2, r2
 1889              	@ 0 "" 2
 1890              	.LVL175:
 1891              		.thumb
 1892              		.syntax unified
 1893              	.LBE274:
 1894              	.LBE273:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1895              		.loc 1 678 0
 1896 00e2 394A     		ldr	r2, .L168+4
 1897 00e4 1068     		ldr	r0, [r2]
 1898              	.LVL176:
 1899              	.LBB275:
 1900              	.LBB276:
 1901              		.loc 2 531 0
 1902 00e6 4FF00072 		mov	r2, #33554432
 1903              		.syntax unified
 1904              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1905 00ea 92FAA2F2 		rbit r2, r2
 1906              	@ 0 "" 2
 1907              	.LVL177:
 1908              		.thumb
ARM GAS  /tmp/cc0KFdmJ.s 			page 62


 1909              		.syntax unified
 1910              	.LBE276:
 1911              	.LBE275:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1912              		.loc 1 678 0
 1913 00ee B2FA82F2 		clz	r2, r2
 1914 00f2 02F01F02 		and	r2, r2, #31
 1915 00f6 0121     		movs	r1, #1
 1916              	.LVL178:
 1917 00f8 01FA02F2 		lsl	r2, r1, r2
 1918 00fc 1042     		tst	r0, r2
 1919 00fe BBD1     		bne	.L138
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1920              		.loc 1 680 0
 1921 0100 0120     		movs	r0, #1
 1922 0102 70BD     		pop	{r4, r5, r6, pc}
 1923              	.LVL179:
 1924              	.L144:
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1925              		.loc 1 699 0
 1926 0104 304B     		ldr	r3, .L168+4
 1927 0106 5B68     		ldr	r3, [r3, #4]
 1928 0108 03F00C03 		and	r3, r3, #12
 1929 010c 042B     		cmp	r3, #4
 1930 010e 17D0     		beq	.L134
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1931              		.loc 1 701 0
 1932 0110 FFF7FEFF 		bl	HAL_GetTick
 1933              	.LVL180:
 1934 0114 801B     		subs	r0, r0, r6
 1935 0116 41F28833 		movw	r3, #5000
 1936 011a 9842     		cmp	r0, r3
 1937 011c F2D9     		bls	.L144
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1938              		.loc 1 703 0
 1939 011e 0320     		movs	r0, #3
 1940 0120 70BD     		pop	{r4, r5, r6, pc}
 1941              	.LVL181:
 1942              	.L147:
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1943              		.loc 1 709 0
 1944 0122 294B     		ldr	r3, .L168+4
 1945 0124 5B68     		ldr	r3, [r3, #4]
 1946 0126 03F00C03 		and	r3, r3, #12
 1947 012a 082B     		cmp	r3, #8
 1948 012c 08D0     		beq	.L134
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1949              		.loc 1 711 0
 1950 012e FFF7FEFF 		bl	HAL_GetTick
 1951              	.LVL182:
 1952 0132 801B     		subs	r0, r0, r6
 1953 0134 41F28833 		movw	r3, #5000
 1954 0138 9842     		cmp	r0, r3
 1955 013a F2D9     		bls	.L147
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1956              		.loc 1 713 0
 1957 013c 0320     		movs	r0, #3
ARM GAS  /tmp/cc0KFdmJ.s 			page 63


 1958 013e 70BD     		pop	{r4, r5, r6, pc}
 1959              	.LVL183:
 1960              	.L134:
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1961              		.loc 1 729 0
 1962 0140 204B     		ldr	r3, .L168
 1963 0142 1B68     		ldr	r3, [r3]
 1964 0144 03F00703 		and	r3, r3, #7
 1965 0148 9D42     		cmp	r5, r3
 1966 014a 0CD2     		bcs	.L151
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1967              		.loc 1 732 0
 1968 014c 1D4A     		ldr	r2, .L168
 1969 014e 1368     		ldr	r3, [r2]
 1970 0150 23F00703 		bic	r3, r3, #7
 1971 0154 2B43     		orrs	r3, r3, r5
 1972 0156 1360     		str	r3, [r2]
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1973              		.loc 1 736 0
 1974 0158 1368     		ldr	r3, [r2]
 1975 015a 03F00703 		and	r3, r3, #7
 1976 015e 9D42     		cmp	r5, r3
 1977 0160 01D0     		beq	.L151
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1978              		.loc 1 738 0
 1979 0162 0120     		movs	r0, #1
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 1980              		.loc 1 763 0
 1981 0164 70BD     		pop	{r4, r5, r6, pc}
 1982              	.LVL184:
 1983              	.L151:
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 1984              		.loc 1 743 0
 1985 0166 2368     		ldr	r3, [r4]
 1986 0168 13F0040F 		tst	r3, #4
 1987 016c 06D0     		beq	.L152
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 1988              		.loc 1 746 0
 1989 016e 164A     		ldr	r2, .L168+4
 1990 0170 5368     		ldr	r3, [r2, #4]
 1991 0172 23F4E063 		bic	r3, r3, #1792
 1992 0176 E168     		ldr	r1, [r4, #12]
 1993 0178 0B43     		orrs	r3, r3, r1
 1994 017a 5360     		str	r3, [r2, #4]
 1995              	.L152:
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 1996              		.loc 1 750 0
 1997 017c 2368     		ldr	r3, [r4]
 1998 017e 13F0080F 		tst	r3, #8
 1999 0182 07D0     		beq	.L153
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2000              		.loc 1 753 0
 2001 0184 104A     		ldr	r2, .L168+4
 2002 0186 5368     		ldr	r3, [r2, #4]
 2003 0188 23F46053 		bic	r3, r3, #14336
 2004 018c 2169     		ldr	r1, [r4, #16]
 2005 018e 43EAC103 		orr	r3, r3, r1, lsl #3
ARM GAS  /tmp/cc0KFdmJ.s 			page 64


 2006 0192 5360     		str	r3, [r2, #4]
 2007              	.L153:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2008              		.loc 1 757 0
 2009 0194 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2010              	.LVL185:
 2011 0198 0B4B     		ldr	r3, .L168+4
 2012 019a 5B68     		ldr	r3, [r3, #4]
 2013 019c 03F0F003 		and	r3, r3, #240
 2014              	.LVL186:
 2015              	.LBB277:
 2016              	.LBB278:
 2017              		.loc 2 531 0
 2018 01a0 F022     		movs	r2, #240
 2019              		.syntax unified
 2020              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2021 01a2 92FAA2F2 		rbit r2, r2
 2022              	@ 0 "" 2
 2023              	.LVL187:
 2024              		.thumb
 2025              		.syntax unified
 2026              	.LBE278:
 2027              	.LBE277:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2028              		.loc 1 757 0
 2029 01a6 B2FA82F2 		clz	r2, r2
 2030 01aa D340     		lsrs	r3, r3, r2
 2031 01ac 074A     		ldr	r2, .L168+8
 2032 01ae D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2033 01b0 D840     		lsrs	r0, r0, r3
 2034 01b2 074B     		ldr	r3, .L168+12
 2035 01b4 1860     		str	r0, [r3]
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 2036              		.loc 1 760 0
 2037 01b6 0020     		movs	r0, #0
 2038 01b8 FFF7FEFF 		bl	HAL_InitTick
 2039              	.LVL188:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2040              		.loc 1 762 0
 2041 01bc 0020     		movs	r0, #0
 2042 01be 70BD     		pop	{r4, r5, r6, pc}
 2043              	.LVL189:
 2044              	.L157:
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2045              		.loc 1 689 0
 2046 01c0 0120     		movs	r0, #1
 2047 01c2 70BD     		pop	{r4, r5, r6, pc}
 2048              	.LVL190:
 2049              	.L169:
 2050              		.align	2
 2051              	.L168:
 2052 01c4 00200240 		.word	1073881088
 2053 01c8 00100240 		.word	1073876992
 2054 01cc 00000000 		.word	AHBPrescTable
 2055 01d0 00000000 		.word	SystemCoreClock
 2056              		.cfi_endproc
 2057              	.LFE126:
ARM GAS  /tmp/cc0KFdmJ.s 			page 65


 2059              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2060              		.align	1
 2061              		.global	HAL_RCC_GetHCLKFreq
 2062              		.syntax unified
 2063              		.thumb
 2064              		.thumb_func
 2065              		.fpu fpv4-sp-d16
 2067              	HAL_RCC_GetHCLKFreq:
 2068              	.LFB131:
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * 
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated within this function
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HCLK frequency
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2069              		.loc 1 977 0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 0
 2072              		@ frame_needed = 0, uses_anonymous_args = 0
 2073              		@ link register save eliminated.
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return SystemCoreClock;
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2074              		.loc 1 979 0
 2075 0000 014B     		ldr	r3, .L171
 2076 0002 1868     		ldr	r0, [r3]
 2077 0004 7047     		bx	lr
 2078              	.L172:
 2079 0006 00BF     		.align	2
 2080              	.L171:
 2081 0008 00000000 		.word	SystemCoreClock
 2082              		.cfi_endproc
 2083              	.LFE131:
 2085              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2086              		.align	1
 2087              		.global	HAL_RCC_GetPCLK1Freq
 2088              		.syntax unified
 2089              		.thumb
 2090              		.thumb_func
 2091              		.fpu fpv4-sp-d16
 2093              	HAL_RCC_GetPCLK1Freq:
 2094              	.LFB132:
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK1 frequency
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2095              		.loc 1 988 0
ARM GAS  /tmp/cc0KFdmJ.s 			page 66


 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 0
 2098              		@ frame_needed = 0, uses_anonymous_args = 0
 2099 0000 08B5     		push	{r3, lr}
 2100              	.LCFI8:
 2101              		.cfi_def_cfa_offset 8
 2102              		.cfi_offset 3, -8
 2103              		.cfi_offset 14, -4
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 2104              		.loc 1 990 0
 2105 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2106              	.LVL191:
 2107 0006 074B     		ldr	r3, .L175
 2108 0008 5B68     		ldr	r3, [r3, #4]
 2109 000a 03F4E063 		and	r3, r3, #1792
 2110              	.LVL192:
 2111              	.LBB279:
 2112              	.LBB280:
 2113              		.loc 2 531 0
 2114 000e 4FF4E062 		mov	r2, #1792
 2115              		.syntax unified
 2116              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2117 0012 92FAA2F2 		rbit r2, r2
 2118              	@ 0 "" 2
 2119              	.LVL193:
 2120              		.thumb
 2121              		.syntax unified
 2122              	.LBE280:
 2123              	.LBE279:
 2124              		.loc 1 990 0
 2125 0016 B2FA82F2 		clz	r2, r2
 2126 001a D340     		lsrs	r3, r3, r2
 2127 001c 024A     		ldr	r2, .L175+4
 2128 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }    
 2129              		.loc 1 991 0
 2130 0020 D840     		lsrs	r0, r0, r3
 2131 0022 08BD     		pop	{r3, pc}
 2132              	.L176:
 2133              		.align	2
 2134              	.L175:
 2135 0024 00100240 		.word	1073876992
 2136 0028 00000000 		.word	APBPrescTable
 2137              		.cfi_endproc
 2138              	.LFE132:
 2140              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2141              		.align	1
 2142              		.global	HAL_RCC_GetPCLK2Freq
 2143              		.syntax unified
 2144              		.thumb
 2145              		.thumb_func
 2146              		.fpu fpv4-sp-d16
 2148              	HAL_RCC_GetPCLK2Freq:
 2149              	.LFB133:
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
ARM GAS  /tmp/cc0KFdmJ.s 			page 67


 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK2 frequency
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2150              		.loc 1 1000 0
 2151              		.cfi_startproc
 2152              		@ args = 0, pretend = 0, frame = 0
 2153              		@ frame_needed = 0, uses_anonymous_args = 0
 2154 0000 08B5     		push	{r3, lr}
 2155              	.LCFI9:
 2156              		.cfi_def_cfa_offset 8
 2157              		.cfi_offset 3, -8
 2158              		.cfi_offset 14, -4
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 2159              		.loc 1 1002 0
 2160 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2161              	.LVL194:
 2162 0006 074B     		ldr	r3, .L179
 2163 0008 5B68     		ldr	r3, [r3, #4]
 2164 000a 03F46053 		and	r3, r3, #14336
 2165              	.LVL195:
 2166              	.LBB281:
 2167              	.LBB282:
 2168              		.loc 2 531 0
 2169 000e 4FF46052 		mov	r2, #14336
 2170              		.syntax unified
 2171              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2172 0012 92FAA2F2 		rbit r2, r2
 2173              	@ 0 "" 2
 2174              	.LVL196:
 2175              		.thumb
 2176              		.syntax unified
 2177              	.LBE282:
 2178              	.LBE281:
 2179              		.loc 1 1002 0
 2180 0016 B2FA82F2 		clz	r2, r2
 2181 001a D340     		lsrs	r3, r3, r2
 2182 001c 024A     		ldr	r2, .L179+4
 2183 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** } 
 2184              		.loc 1 1003 0
 2185 0020 D840     		lsrs	r0, r0, r3
 2186 0022 08BD     		pop	{r3, pc}
 2187              	.L180:
 2188              		.align	2
 2189              	.L179:
 2190 0024 00100240 		.word	1073876992
 2191 0028 00000000 		.word	APBPrescTable
 2192              		.cfi_endproc
 2193              	.LFE133:
 2195              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2196              		.align	1
 2197              		.global	HAL_RCC_GetOscConfig
ARM GAS  /tmp/cc0KFdmJ.s 			page 68


 2198              		.syntax unified
 2199              		.thumb
 2200              		.thumb_func
 2201              		.fpu fpv4-sp-d16
 2203              	HAL_RCC_GetOscConfig:
 2204              	.LFB134:
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * will be configured.
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2205              		.loc 1 1013 0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 0
 2208              		@ frame_needed = 0, uses_anonymous_args = 0
 2209              		@ link register save eliminated.
 2210              	.LVL197:
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2211              		.loc 1 1018 0
 2212 0000 0F23     		movs	r3, #15
 2213 0002 0360     		str	r3, [r0]
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2214              		.loc 1 1023 0
 2215 0004 2D4B     		ldr	r3, .L195
 2216 0006 1B68     		ldr	r3, [r3]
 2217 0008 13F4802F 		tst	r3, #262144
 2218 000c 36D0     		beq	.L182
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2219              		.loc 1 1025 0
 2220 000e 4FF4A023 		mov	r3, #327680
 2221 0012 4360     		str	r3, [r0, #4]
 2222              	.L183:
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
ARM GAS  /tmp/cc0KFdmJ.s 			page 69


 2223              		.loc 1 1036 0
 2224 0014 294A     		ldr	r2, .L195
 2225 0016 D36A     		ldr	r3, [r2, #44]
 2226 0018 03F00F03 		and	r3, r3, #15
 2227 001c 8360     		str	r3, [r0, #8]
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2228              		.loc 1 1040 0
 2229 001e 1368     		ldr	r3, [r2]
 2230 0020 13F0010F 		tst	r3, #1
 2231 0024 36D0     		beq	.L185
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2232              		.loc 1 1042 0
 2233 0026 0123     		movs	r3, #1
 2234 0028 0361     		str	r3, [r0, #16]
 2235              	.L186:
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 2236              		.loc 1 1049 0
 2237 002a 2449     		ldr	r1, .L195
 2238 002c 0B68     		ldr	r3, [r1]
 2239 002e 03F0F803 		and	r3, r3, #248
 2240              	.LVL198:
 2241              	.LBB283:
 2242              	.LBB284:
 2243              		.loc 2 531 0
 2244 0032 F822     		movs	r2, #248
 2245              		.syntax unified
 2246              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2247 0034 92FAA2F2 		rbit r2, r2
 2248              	@ 0 "" 2
 2249              	.LVL199:
 2250              		.thumb
 2251              		.syntax unified
 2252              	.LBE284:
 2253              	.LBE283:
 2254              		.loc 1 1049 0
 2255 0038 B2FA82F2 		clz	r2, r2
 2256 003c D340     		lsrs	r3, r3, r2
 2257 003e 4361     		str	r3, [r0, #20]
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2258              		.loc 1 1052 0
 2259 0040 0B6A     		ldr	r3, [r1, #32]
 2260 0042 13F0040F 		tst	r3, #4
 2261 0046 28D0     		beq	.L187
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
ARM GAS  /tmp/cc0KFdmJ.s 			page 70


 2262              		.loc 1 1054 0
 2263 0048 0523     		movs	r3, #5
 2264 004a C360     		str	r3, [r0, #12]
 2265              	.L188:
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2266              		.loc 1 1066 0
 2267 004c 1B4B     		ldr	r3, .L195
 2268 004e 5B6A     		ldr	r3, [r3, #36]
 2269 0050 13F0010F 		tst	r3, #1
 2270 0054 2CD0     		beq	.L190
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2271              		.loc 1 1068 0
 2272 0056 0123     		movs	r3, #1
 2273 0058 8361     		str	r3, [r0, #24]
 2274              	.L191:
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2275              		.loc 1 1077 0
 2276 005a 184B     		ldr	r3, .L195
 2277 005c 1B68     		ldr	r3, [r3]
 2278 005e 13F0807F 		tst	r3, #16777216
 2279 0062 28D1     		bne	.L194
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2280              		.loc 1 1083 0
 2281 0064 0123     		movs	r3, #1
 2282 0066 C361     		str	r3, [r0, #28]
 2283              	.L193:
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2284              		.loc 1 1085 0
 2285 0068 144A     		ldr	r2, .L195
 2286 006a 5368     		ldr	r3, [r2, #4]
 2287 006c 03F48033 		and	r3, r3, #65536
ARM GAS  /tmp/cc0KFdmJ.s 			page 71


 2288 0070 0362     		str	r3, [r0, #32]
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2289              		.loc 1 1086 0
 2290 0072 5368     		ldr	r3, [r2, #4]
 2291 0074 03F47013 		and	r3, r3, #3932160
 2292 0078 4362     		str	r3, [r0, #36]
 2293 007a 7047     		bx	lr
 2294              	.L182:
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2295              		.loc 1 1027 0
 2296 007c 0F4B     		ldr	r3, .L195
 2297 007e 1B68     		ldr	r3, [r3]
 2298 0080 13F4803F 		tst	r3, #65536
 2299 0084 03D0     		beq	.L184
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2300              		.loc 1 1029 0
 2301 0086 4FF48033 		mov	r3, #65536
 2302 008a 4360     		str	r3, [r0, #4]
 2303 008c C2E7     		b	.L183
 2304              	.L184:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2305              		.loc 1 1033 0
 2306 008e 0023     		movs	r3, #0
 2307 0090 4360     		str	r3, [r0, #4]
 2308 0092 BFE7     		b	.L183
 2309              	.L185:
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2310              		.loc 1 1046 0
 2311 0094 0023     		movs	r3, #0
 2312 0096 0361     		str	r3, [r0, #16]
 2313 0098 C7E7     		b	.L186
 2314              	.L187:
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2315              		.loc 1 1056 0
 2316 009a 084B     		ldr	r3, .L195
 2317 009c 1B6A     		ldr	r3, [r3, #32]
 2318 009e 13F0010F 		tst	r3, #1
 2319 00a2 02D0     		beq	.L189
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2320              		.loc 1 1058 0
 2321 00a4 0123     		movs	r3, #1
 2322 00a6 C360     		str	r3, [r0, #12]
 2323 00a8 D0E7     		b	.L188
 2324              	.L189:
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2325              		.loc 1 1062 0
 2326 00aa 0023     		movs	r3, #0
 2327 00ac C360     		str	r3, [r0, #12]
 2328 00ae CDE7     		b	.L188
 2329              	.L190:
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2330              		.loc 1 1072 0
 2331 00b0 0023     		movs	r3, #0
 2332 00b2 8361     		str	r3, [r0, #24]
 2333 00b4 D1E7     		b	.L191
 2334              	.L194:
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
ARM GAS  /tmp/cc0KFdmJ.s 			page 72


 2335              		.loc 1 1079 0
 2336 00b6 0223     		movs	r3, #2
 2337 00b8 C361     		str	r3, [r0, #28]
 2338 00ba D5E7     		b	.L193
 2339              	.L196:
 2340              		.align	2
 2341              	.L195:
 2342 00bc 00100240 		.word	1073876992
 2343              		.cfi_endproc
 2344              	.LFE134:
 2346              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2347              		.align	1
 2348              		.global	HAL_RCC_GetClockConfig
 2349              		.syntax unified
 2350              		.thumb
 2351              		.thumb_func
 2352              		.fpu fpv4-sp-d16
 2354              	HAL_RCC_GetClockConfig:
 2355              	.LFB135:
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * contains the current clock configuration.
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2356              		.loc 1 1101 0
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 0
 2359              		@ frame_needed = 0, uses_anonymous_args = 0
 2360              		@ link register save eliminated.
 2361              	.LVL200:
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2362              		.loc 1 1107 0
 2363 0000 0F23     		movs	r3, #15
 2364 0002 0360     		str	r3, [r0]
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2365              		.loc 1 1110 0
 2366 0004 0B4B     		ldr	r3, .L198
 2367 0006 5A68     		ldr	r2, [r3, #4]
 2368 0008 02F00302 		and	r2, r2, #3
 2369 000c 4260     		str	r2, [r0, #4]
ARM GAS  /tmp/cc0KFdmJ.s 			page 73


1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2370              		.loc 1 1113 0
 2371 000e 5A68     		ldr	r2, [r3, #4]
 2372 0010 02F0F002 		and	r2, r2, #240
 2373 0014 8260     		str	r2, [r0, #8]
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 2374              		.loc 1 1116 0
 2375 0016 5A68     		ldr	r2, [r3, #4]
 2376 0018 02F4E062 		and	r2, r2, #1792
 2377 001c C260     		str	r2, [r0, #12]
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2378              		.loc 1 1119 0
 2379 001e 5B68     		ldr	r3, [r3, #4]
 2380 0020 DB08     		lsrs	r3, r3, #3
 2381 0022 03F4E063 		and	r3, r3, #1792
 2382 0026 0361     		str	r3, [r0, #16]
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2383              		.loc 1 1122 0
 2384 0028 034B     		ldr	r3, .L198+4
 2385 002a 1B68     		ldr	r3, [r3]
 2386 002c 03F00703 		and	r3, r3, #7
 2387 0030 0B60     		str	r3, [r1]
 2388 0032 7047     		bx	lr
 2389              	.L199:
 2390              		.align	2
 2391              	.L198:
 2392 0034 00100240 		.word	1073876992
 2393 0038 00200240 		.word	1073881088
 2394              		.cfi_endproc
 2395              	.LFE135:
 2397              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2398              		.align	1
 2399              		.weak	HAL_RCC_CSSCallback
 2400              		.syntax unified
 2401              		.thumb
 2402              		.thumb_func
 2403              		.fpu fpv4-sp-d16
 2405              	HAL_RCC_CSSCallback:
 2406              	.LFB137:
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
ARM GAS  /tmp/cc0KFdmJ.s 			page 74


1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval none
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2407              		.loc 1 1148 0
 2408              		.cfi_startproc
 2409              		@ args = 0, pretend = 0, frame = 0
 2410              		@ frame_needed = 0, uses_anonymous_args = 0
 2411              		@ link register save eliminated.
 2412 0000 7047     		bx	lr
 2413              		.cfi_endproc
 2414              	.LFE137:
 2416              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2417              		.align	1
 2418              		.global	HAL_RCC_NMI_IRQHandler
 2419              		.syntax unified
 2420              		.thumb
 2421              		.thumb_func
 2422              		.fpu fpv4-sp-d16
 2424              	HAL_RCC_NMI_IRQHandler:
 2425              	.LFB136:
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2426              		.loc 1 1131 0
 2427              		.cfi_startproc
 2428              		@ args = 0, pretend = 0, frame = 0
 2429              		@ frame_needed = 0, uses_anonymous_args = 0
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2430              		.loc 1 1131 0
 2431 0000 08B5     		push	{r3, lr}
 2432              	.LCFI10:
 2433              		.cfi_def_cfa_offset 8
 2434              		.cfi_offset 3, -8
 2435              		.cfi_offset 14, -4
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2436              		.loc 1 1133 0
 2437 0002 064B     		ldr	r3, .L205
 2438 0004 9B68     		ldr	r3, [r3, #8]
 2439 0006 13F0800F 		tst	r3, #128
 2440 000a 00D1     		bne	.L204
 2441              	.L201:
 2442 000c 08BD     		pop	{r3, pc}
 2443              	.L204:
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2444              		.loc 1 1136 0
 2445 000e FFF7FEFF 		bl	HAL_RCC_CSSCallback
ARM GAS  /tmp/cc0KFdmJ.s 			page 75


 2446              	.LVL201:
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2447              		.loc 1 1139 0
 2448 0012 8022     		movs	r2, #128
 2449 0014 024B     		ldr	r3, .L205+4
 2450 0016 1A70     		strb	r2, [r3]
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2451              		.loc 1 1141 0
 2452 0018 F8E7     		b	.L201
 2453              	.L206:
 2454 001a 00BF     		.align	2
 2455              	.L205:
 2456 001c 00100240 		.word	1073876992
 2457 0020 0A100240 		.word	1073877002
 2458              		.cfi_endproc
 2459              	.LFE136:
 2461              		.global	aPredivFactorTable
 2462              		.global	aPLLMULFactorTable
 2463              		.section	.rodata.aPLLMULFactorTable,"a",%progbits
 2464              		.align	2
 2465              		.set	.LANCHOR0,. + 0
 2468              	aPLLMULFactorTable:
 2469 0000 02       		.byte	2
 2470 0001 03       		.byte	3
 2471 0002 04       		.byte	4
 2472 0003 05       		.byte	5
 2473 0004 06       		.byte	6
 2474 0005 07       		.byte	7
 2475 0006 08       		.byte	8
 2476 0007 09       		.byte	9
 2477 0008 0A       		.byte	10
 2478 0009 0B       		.byte	11
 2479 000a 0C       		.byte	12
 2480 000b 0D       		.byte	13
 2481 000c 0E       		.byte	14
 2482 000d 0F       		.byte	15
 2483 000e 10       		.byte	16
 2484 000f 10       		.byte	16
 2485              		.section	.rodata.aPredivFactorTable,"a",%progbits
 2486              		.align	2
 2487              		.set	.LANCHOR1,. + 0
 2490              	aPredivFactorTable:
 2491 0000 01       		.byte	1
 2492 0001 02       		.byte	2
 2493 0002 03       		.byte	3
 2494 0003 04       		.byte	4
 2495 0004 05       		.byte	5
 2496 0005 06       		.byte	6
 2497 0006 07       		.byte	7
 2498 0007 08       		.byte	8
 2499 0008 09       		.byte	9
 2500 0009 0A       		.byte	10
 2501 000a 0B       		.byte	11
 2502 000b 0C       		.byte	12
 2503 000c 0D       		.byte	13
 2504 000d 0E       		.byte	14
 2505 000e 0F       		.byte	15
ARM GAS  /tmp/cc0KFdmJ.s 			page 76


 2506 000f 10       		.byte	16
 2507              		.text
 2508              	.Letext0:
 2509              		.file 3 "/home/venturus/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_
 2510              		.file 4 "/home/venturus/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2511              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2512              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2513              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f334x8.h"
 2514              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2515              		.file 9 "/home/venturus/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 2516              		.file 10 "/home/venturus/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h"
 2517              		.file 11 "/home/venturus/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/include/st
 2518              		.file 12 "/home/venturus/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 2519              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2520              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2521              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2522              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/cc0KFdmJ.s 			page 77


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_rcc.c
     /tmp/cc0KFdmJ.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/cc0KFdmJ.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/cc0KFdmJ.s:69     .text.HAL_RCC_DeInit:0000000000000038 $d
     /tmp/cc0KFdmJ.s:77     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/cc0KFdmJ.s:84     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/cc0KFdmJ.s:713    .text.HAL_RCC_OscConfig:00000000000002e4 $d
     /tmp/cc0KFdmJ.s:720    .text.HAL_RCC_OscConfig:00000000000002ec $t
     /tmp/cc0KFdmJ.s:1411   .text.HAL_RCC_OscConfig:00000000000005fc $d
     /tmp/cc0KFdmJ.s:1419   .text.HAL_RCC_OscConfig:0000000000000608 $t
     /tmp/cc0KFdmJ.s:1425   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/cc0KFdmJ.s:1432   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/cc0KFdmJ.s:1501   .text.HAL_RCC_MCOConfig:000000000000004c $d
     /tmp/cc0KFdmJ.s:1506   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/cc0KFdmJ.s:1513   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/cc0KFdmJ.s:1546   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/cc0KFdmJ.s:1553   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/cc0KFdmJ.s:1586   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/cc0KFdmJ.s:1593   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/cc0KFdmJ.s:1683   .text.HAL_RCC_GetSysClockFreq:000000000000005c $d
     /tmp/cc0KFdmJ.s:1692   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/cc0KFdmJ.s:1699   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/cc0KFdmJ.s:2052   .text.HAL_RCC_ClockConfig:00000000000001c4 $d
     /tmp/cc0KFdmJ.s:2060   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/cc0KFdmJ.s:2067   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/cc0KFdmJ.s:2081   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
     /tmp/cc0KFdmJ.s:2086   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/cc0KFdmJ.s:2093   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/cc0KFdmJ.s:2135   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/cc0KFdmJ.s:2141   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/cc0KFdmJ.s:2148   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/cc0KFdmJ.s:2190   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/cc0KFdmJ.s:2196   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/cc0KFdmJ.s:2203   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/cc0KFdmJ.s:2342   .text.HAL_RCC_GetOscConfig:00000000000000bc $d
     /tmp/cc0KFdmJ.s:2347   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/cc0KFdmJ.s:2354   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/cc0KFdmJ.s:2392   .text.HAL_RCC_GetClockConfig:0000000000000034 $d
     /tmp/cc0KFdmJ.s:2398   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/cc0KFdmJ.s:2405   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/cc0KFdmJ.s:2417   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/cc0KFdmJ.s:2424   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/cc0KFdmJ.s:2456   .text.HAL_RCC_NMI_IRQHandler:000000000000001c $d
     /tmp/cc0KFdmJ.s:2490   .rodata.aPredivFactorTable:0000000000000000 aPredivFactorTable
     /tmp/cc0KFdmJ.s:2468   .rodata.aPLLMULFactorTable:0000000000000000 aPLLMULFactorTable
     /tmp/cc0KFdmJ.s:2464   .rodata.aPLLMULFactorTable:0000000000000000 $d
     /tmp/cc0KFdmJ.s:2486   .rodata.aPredivFactorTable:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_GPIO_Init
HAL_InitTick
AHBPrescTable
APBPrescTable
ARM GAS  /tmp/cc0KFdmJ.s 			page 78


